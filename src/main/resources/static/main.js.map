{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/TimeoutInterceptor.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.globals.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/filter.component.html","webpack:///./src/app/filter.component.ts","webpack:///./src/app/model/ElisaTitle.ts","webpack:///./src/app/model/ElisaTitleData.ts","webpack:///./src/app/model/Memorylist.ts","webpack:///./src/app/model/ProtokollRequest.ts","webpack:///./src/app/model/ProtokollToElisaRequest.ts","webpack:///./src/app/service/authentication.service.ts","webpack:///./src/app/service/data.service.ts","webpack:///./src/app/service/elisa.service.ts","webpack:///./src/app/service/filter.service.ts","webpack:///./src/app/service/getter.service.ts","webpack:///./src/app/service/memorylist.service.ts","webpack:///./src/app/stockmanagement.component.html","webpack:///./src/app/stockmanagement.component.ts","webpack:///./src/app/translate/index.ts","webpack:///./src/app/translate/lang-de.ts","webpack:///./src/app/translate/lang-en.ts","webpack:///./src/app/translate/translate.module.ts","webpack:///./src/app/translate/translate.pipe.ts","webpack:///./src/app/translate/translate.service.ts","webpack:///./src/app/translate/translation.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./analysis/analysis.module\": [\n\t\t\"./src/app/analysis/analysis.module.ts\",\n\t\t\"common\",\n\t\t\"analysis-analysis-module\"\n\t],\n\t\"./bibliography/bibliography.module\": [\n\t\t\"./src/app/bibliography/bibliography.module.ts\",\n\t\t\"common\",\n\t\t\"bibliography-bibliography-module\"\n\t],\n\t\"./eventlist/eventlist.module\": [\n\t\t\"./src/app/eventlist/eventlist.module.ts\",\n\t\t\"eventlist-eventlist-module\"\n\t],\n\t\"./itemlist/itemlist.module\": [\n\t\t\"./src/app/itemlist/itemlist.module.ts\",\n\t\t\"common\",\n\t\t\"itemlist-itemlist-module\"\n\t],\n\t\"./overview/overview.module\": [\n\t\t\"./src/app/overview/overview.module.ts\",\n\t\t\"overview-overview-module\"\n\t],\n\t\"./statistics/statistics.module\": [\n\t\t\"./src/app/statistics/statistics.module.ts\",\n\t\t\"statistics-statistics-module\"\n\t],\n\t\"./usage/usage.module\": [\n\t\t\"./src/app/usage/usage.module.ts\",\n\t\t\"usage-usage-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/timeout';\r\nimport {Inject, Injectable, InjectionToken} from '@angular/core';\r\n\r\nexport const DEFAULT_TIMEOUT = new InjectionToken<number>('defaultTimeout');\r\nexport const defaultTimeout = 60000;\r\n\r\n@Injectable()\r\nexport class TimeoutInterceptor implements HttpInterceptor {\r\n  constructor(@Inject(DEFAULT_TIMEOUT) protected defaultTimeout) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const timeout = Number(req.headers.get('timeout')) || this.defaultTimeout;\r\n    return next.handle(req).timeout(timeout);\r\n  }\r\n}\r\n","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"/\\\">Lib-Intel</a>\\n      <a style=\\\"color: #efe4bf\\\" class=\\\"navbar-brand\\\" href=\\\"/protokoll\\\">:: Protokoll</a>\\n    </div>\\n    <span *ngIf=\\\"!primaryLoad\\\" class=\\\"navbar-text\\\"><p-inputSwitch\\n      [(ngModel)]=\\\"this.filterService.show['filter']\\\"></p-inputSwitch></span>\\n    <div *ngIf=\\\"itemlistService.activeMemorylist\\\" class=\\\"navbar-nav navbar-text navbar-\\\">\\n      {{itemlistService.activeMemorylist.name}}\\n    </div>\\n    <span class=\\\"navbar-nav navbar-right\\\">\\n      <app-stockmanagement *ngIf=\\\"authenticationService.principal\\\"></app-stockmanagement>\\n      <span class=\\\"navbar-text\\\">\\n        <a *ngIf=\\\"!authenticationService.principal\\\" href=\\\"/login\\\">\\n          <button type=\\\"button\\\" pButton icon=\\\"pi pi-bars\\\" label=\\\"Login\\\"></button>\\n        </a>\\n      </span>\\n    </span>\\n  </div>\\n</nav>\\n\\n<div class=\\\"jumbotron\\\" *ngIf=\\\"primaryLoad\\\">\\n  <div class=\\\"container\\\">\\n    <h1 style=\\\"padding: 20px;\\\">\\n      {{'title.protocol' | translate}}\\n    </h1>\\n    <p style=\\\"padding: 10px;\\\">{{'description.protocol.short' | translate}}</p>\\n    <div class=\\\"ui-g ui-fluid\\\">\\n      <form (submit)=\\\"collect()\\\" (keyup.enter)=\\\"collect()\\\">\\n        <div class=\\\"ui-g-12 ui-lg-3\\\">\\n        <span class=\\\"ui-float-label\\\">\\n        <input id=\\\"float-input-jumbotron\\\" type=\\\"text\\\" size=\\\"30\\\" pInputText [(ngModel)]=\\\"protokollRequest.shelfmark\\\"\\n               [ngModelOptions]=\\\"{standalone: true}\\\" autofocus\\n               pTooltip=\\\"Bitte Signatur eingeben\\\" tooltipPosition=\\\"bottom\\\">\\n        <label for=\\\"float-input-jumbotron\\\">{{'shelfmark' | translate}}</label>\\n        </span>\\n        </div>\\n        <div class=\\\"ui-g-12 ui-lg-3\\\">\\n        <span class=\\\"ui-float-label\\\">\\n        <input [(ngModel)]=\\\"protokollRequest.collections\\\" id=\\\"collections-primary-jumbotron\\\" pInputText\\n               name=\\\"collections\\\"\\n               size=\\\"20\\\" pTooltip=\\\"z.B. E31, E3, D45, E (mehrere durch Leerzeichen trennen)\\\" tooltipPosition=\\\"bottom\\\"\\n               [ngModelOptions]=\\\"{standalone: true}\\\"/>\\n        <label for=\\\"collections-primary-jumbotron\\\">{{'collections' | translate}}</label>\\n        </span>\\n        </div>\\n        <div class=\\\"ui-g-12 ui-lg-3\\\">\\n          <p-toggleButton onLabel=\\\"Nur diese Auflage\\\" offLabel=\\\"Alle Auflagen\\\"\\n                          [(ngModel)]=\\\"protokollRequest.exact\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></p-toggleButton>\\n        </div>\\n        <div class=\\\"ui-g-12 ui-lg-3\\\">\\n          <button pButton type=\\\"button\\\" class=\\\"ui-button-success\\\" (click)=\\\"collect()\\\" icon=\\\"pi pi-search\\\"\\n                  label=\\\"Abfrage starten\\\"></button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<p-dialog header=\\\"{{'collecting.data' | translate}}\\\" [modal]=\\\"true\\\" [closable]=\\\"false\\\" [(visible)]=\\\"busy\\\">\\n  <img src=\\\"/files/custom/loading.gif\\\" alt=\\\"Loading...\\\" style=\\\"width:304px;height:228px;\\\">\\n</p-dialog>\\n\\n<p-dialog *ngIf=\\\"filterService.show['elisa']\\\" [(visible)]=\\\"filterService.show['elisa']\\\">\\n  <p-header>\\n    An ELi:SA senden\\n  </p-header>\\n  <table class=\\\"table table-hover\\\">\\n    <tr>\\n      <td>\\n        <label for=\\\"notepad\\\">Merkliste</label>\\n      </td>\\n      <td>\\n        <p>\\n          <input size=\\\"60\\\" pInputText type=\\\"text\\\" value=\\\"Ausleihprotokoll\\\" style=\\\"border: none;\\\" id=\\\"notepad\\\"\\n                 [(ngModel)]=\\\"elisaService.notepad\\\"/>\\n        </p>\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        <label for=\\\"noteIntern\\\">Interne Notiz</label>\\n      </td>\\n      <td>\\n        <input size=\\\"60\\\" pInputText type=\\\"text\\\" style=\\\"border: none;\\\" id=\\\"noteIntern\\\"\\n               [(ngModel)]=\\\"elisaService.elisaTitleData.notizIntern\\\"/>\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        <label for=\\\"note\\\">Bibliotheksnotiz</label>\\n      </td>\\n      <td>\\n        <p>\\n          <input size=\\\"60\\\" pInputText type=\\\"text\\\" style=\\\"border: none;\\\" id=\\\"note\\\"\\n                 [(ngModel)]=\\\"elisaService.elisaTitleData.notiz\\\"/>\\n        </p>\\n      </td>\\n    </tr>\\n  </table>\\n\\n\\n  <p-footer>\\n    <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"sendToElisa()\\\" label=\\\"Abschicken\\\"></button>\\n    <button type=\\\"button\\\" pButton icon=\\\"pi pi-close\\\" (click)=\\\"filterService.show['elisa'] = false\\\" label=\\\"Abbrechen\\\"\\n            class=\\\"ui-button-secondary\\\"></button>\\n  </p-footer>\\n</p-dialog>\\n\\n<div id=\\\"wrapper\\\" *ngIf=\\\"!primaryLoad\\\" class=\\\"ui-g\\\">\\n  <div class=\\\"ui-g content\\\">\\n    <div class=\\\"ui-md-2 ui-g-12 ui-g-nopad\\\" *ngIf=\\\"filterService.show['filter']\\\">\\n      <app-filter></app-filter>\\n    </div>\\n\\n    <div [className]=\\\"filterService.show['filter'] ? 'ui-md-10 ui-g-12' : 'ui-md-12 ui-g-12'\\\">\\n\\n      <form (submit)=\\\"collect()\\\" (keyup.enter)=\\\"collect()\\\">\\n\\n        <div class=\\\"ui-g\\\"\\n             style=\\\"padding: 20px; border-style: none none solid none; background-color: #dfe4f2;\\\">\\n\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-3\\\">\\n        <span class=\\\"ui-float-label\\\">\\n        <input id=\\\"float-input\\\" type=\\\"text\\\" size=\\\"30\\\" pInputText [(ngModel)]=\\\"protokollRequest.shelfmark\\\"\\n               [ngModelOptions]=\\\"{standalone: true}\\\" autofocus\\n               pTooltip=\\\"Bitte Signatur eingeben\\\" tooltipPosition=\\\"bottom\\\">\\n        <label for=\\\"float-input\\\">{{'shelfmark' | translate}}</label>\\n        </span>\\n          </div>\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\">\\n        <span class=\\\"ui-float-label\\\">\\n        <input [(ngModel)]=\\\"protokollRequest.collections\\\" id=\\\"collections-primary\\\" pInputText name=\\\"collections\\\"\\n               size=\\\"20\\\" pTooltip=\\\"z.B. E31, E3, D45, E (mehrere durch Leerzeichen trennen)\\\" tooltipPosition=\\\"bottom\\\"\\n               [ngModelOptions]=\\\"{standalone: true}\\\"/>\\n        <label for=\\\"collections-primary\\\">{{'collections' | translate}}</label>\\n        </span>\\n          </div>\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\">\\n            <p-toggleButton onLabel=\\\"Nur diese Auflage\\\" offLabel=\\\"Alle Auflagen\\\"\\n                            [(ngModel)]=\\\"protokollRequest.exact\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></p-toggleButton>\\n          </div>\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\">\\n            <button pButton type=\\\"button\\\" class=\\\"ui-button-success\\\" (click)=\\\"collect()\\\" icon=\\\"pi pi-search\\\"\\n                    label=\\\"Abfrage starten\\\"></button>\\n          </div>\\n          <div class=\\\"ui-g-12 ui-md-6 ui-lg-2\\\">\\n            <button pButton type=\\\"button\\\" class=\\\"ui-button-success\\\" (click)=\\\"copyLink()\\\" icon=\\\"pi pi-copy\\\"\\n                    label=\\\"Link kopieren\\\"></button>\\n          </div>\\n        </div>\\n      </form>\\n\\n      <p-messages [(value)]=\\\"messages\\\"></p-messages>\\n\\n      <div class=\\\"ui-g-fluid\\\">\\n        <p-tabMenu [model]=\\\"items\\\" [activeItem]=\\\"items[0]\\\" class=\\\"ui-fluid\\\"></p-tabMenu>\\n\\n        <div class=\\\"ui-g-12 ui-md-12 ui-lg-12 tile-bottom\\\">\\n          <router-outlet></router-outlet>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<p-overlayPanel #op>\\n  <p-scrollPanel [style]=\\\"{width: '300px', height: '800px'}\\\">\\n    <p-table [value]=\\\"itemlistService.memorylistItems\\\" selectionMode=\\\"single\\\" (onRowSelect)=\\\"itemlistService.selectMemorylistItem($event.data)\\\">\\n    <ng-template pTemplate=\\\"body\\\" let-savedItem>\\n      <tr [pSelectableRow]=\\\"savedItem\\\">\\n      <td style=\\\"font-size: 1.4em;\\\">\\n        {{savedItem.shelfmark}}\\n      </td>\\n      </tr>\\n    </ng-template>\\n    </p-table>\\n  </p-scrollPanel>\\n</p-overlayPanel>\\n\\n<footer style=\\\"text-align: center;\\\" *ngIf=\\\"itemlistService.memorylistItems\\\" class=\\\"fixed-bottom\\\">\\n  <ul *ngIf=\\\"itemlistService.memorylistItems.length !== 0\\\" style=\\\"font-size: 2em\\\" class=\\\"list-inline\\\">\\n    <li>\\n      <button pButton type=\\\"button\\\" [disabled]=\\\"itemlistService.tabindex < 1\\\" (click)=\\\"itemlistService.previousMemorylistItem()\\\"\\n              icon=\\\"pi pi-chevron-left\\\"></button>\\n    </li>\\n    <li (click)=\\\"op.toggle($event)\\\">\\n      <span style=\\\"color: white; min-width: 150px;\\\">  {{itemlistService.activeMemorylistItem.shelfmark}}  </span>\\n    </li>\\n    <li>\\n      <button pButton type=\\\"button\\\" [disabled]=\\\"itemlistService.tabindex >= itemlistService.memorylistItems.length\\\"\\n              (click)=\\\"itemlistService.nextMemorylistItem()\\\" icon=\\\"pi pi-chevron-right\\\"></button>\\n    </li>\\n  </ul>\\n</footer>\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ProtokollRequest} from './model/ProtokollRequest';\r\nimport {GetterService} from './service/getter.service';\r\nimport {Message} from 'primeng/primeng';\r\n\r\nimport {ActivatedRoute, Params, Router} from '@angular/router';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport {MenuItem, MessageService} from 'primeng/api';\r\nimport {TranslateService} from './translate';\r\nimport {ClipboardService} from 'ngx-clipboard';\r\nimport {PrimoResponse} from './model/PrimoResponse';\r\nimport {AuthenticationService} from './service/authentication.service';\r\nimport {Principal} from './model/Principal';\r\nimport {ElisaTitleData} from './model/ElisaTitleData';\r\nimport {ElisaService} from './service/elisa.service';\r\nimport {ElisaTitle} from './model/ElisaTitle';\r\nimport {ProtokollToElisaRequest} from './model/ProtokollToElisaRequest';\r\nimport {ElisaData} from './model/ElisaData';\r\nimport {FilterService} from './service/filter.service';\r\nimport {DataService} from './service/data.service';\r\nimport {MemorylistService} from './service/memorylist.service';\r\nimport {MemoryListItem} from './model/MemoryListItem';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html',\r\n  providers: [GetterService]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(public getterService: GetterService,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              private translateService: TranslateService,\r\n              private clipboardService: ClipboardService,\r\n              private messageService: MessageService,\r\n              public  authenticationService: AuthenticationService,\r\n              public elisaService: ElisaService,\r\n              public filterService: FilterService,\r\n              public dataService: DataService,\r\n              public itemlistService: MemorylistService) {\r\n  }\r\n\r\n\r\n  recKeys: Set<string>;\r\n\r\n  title: string;\r\n\r\n  busy: boolean;\r\n\r\n  primaryLoad = true;\r\n\r\n  messages: Message[];\r\n\r\n  protokollRequest: ProtokollRequest;\r\n\r\n  items: MenuItem[] = [];\r\n\r\n  activeItem: MenuItem;\r\n\r\n  activePart: string;\r\n\r\n  status = 'ready';\r\n\r\n  principal: Principal;\r\n\r\n\r\n  response = '';\r\n\r\n  isFachreferent = false;\r\n\r\n  private tabs: string[] = ['overview', 'bibliography', 'statistics', 'usage', 'itemlist', 'eventlist'];\r\n\r\n  ngOnInit(): void {\r\n    this.itemlistService.memorylistItemChanged$.subscribe(\r\n      savedItem => this.collectSaveditem()\r\n    );\r\n    this.filterService.filterChanged$.subscribe(change => this.updateData());\r\n    this.filterService.show['elisa'] = false;\r\n    this.authenticationService.updatePrincipal().subscribe(\r\n      data => {\r\n        this.principal = data;\r\n        if (this.principal.roles) {\r\n          this.isFachreferent = this.principal.roles.indexOf('ROLE_FACHREFERENT') > -1;\r\n          if (this.isFachreferent) {\r\n            this.elisaService.setElisaData(this.principal.name).subscribe(\r\n              value => {\r\n                this.filterService.show['elisaData'] = true;\r\n              },\r\n              error => {\r\n                console.log('no elisa data found');\r\n                this.filterService.show['elisaData'] = false;\r\n              }\r\n            );\r\n            this.tabs.push('analysis');\r\n            this.buildTabs();\r\n          }\r\n        }\r\n      },\r\n      error => console.log(error)\r\n    );\r\n    this.translateService.use('de');\r\n    this.buildTabs();\r\n    this.activeItem = this.items[0];\r\n    this.activePart = this.activeItem.id;\r\n    this.protokollRequest = new ProtokollRequest();\r\n    this.route.queryParams.subscribe((params: Params) => {\r\n      if (params['shelfmark'] !== undefined) {\r\n        this.protokollRequest.shelfmark = params['shelfmark'];\r\n        this.protokollRequest.update();\r\n        if (params['exact'] !== undefined) {\r\n          this.protokollRequest.exact = ('true' === params['exact']);\r\n        }\r\n        if (params['collections'] !== undefined) {\r\n          this.protokollRequest.collections = params['collections'];\r\n        }\r\n        if (params['materials'] !== undefined) {\r\n          this.protokollRequest.shelfmark = params['materials'];\r\n        }\r\n        this.collect();\r\n      }\r\n    });\r\n  }\r\n\r\n  buildTabs() {\r\n    this.items = [];\r\n    this.tabs.forEach(entry => {\r\n      return this.items.push({\r\n        label: this.translateService.instant('tab.' + entry),\r\n        icon: 'fa-plus',\r\n        id: entry,\r\n        command: event => this.router.navigate(['/' + entry])\r\n      });\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.getterService.reset();\r\n    this.filterService.resetFilter();\r\n    this.filterService.resetPrintSelection();\r\n    this.filterService.resetDigitalSelection();\r\n    this.recKeys = new Set<string>();\r\n    this.messages = [];\r\n    this.activePart = 'overview';\r\n    this.filterService.show['filter'] = true;\r\n  }\r\n\r\n  collect() {\r\n    this.busy = true;\r\n    this.status = 'collecting';\r\n    this.reset();\r\n    this.protokollRequest.update();\r\n    if (this.protokollRequest.getType() === 'ebook') {\r\n      this.getDigitalManifestations();\r\n    } else {\r\n      this.getAllPrintManifestations();\r\n    }\r\n  }\r\n\r\n  collectSaveditem() {\r\n    this.reset();\r\n    this.protokollRequest.shelfmark = this.itemlistService.activeMemorylistItem.shelfmark;\r\n    this.collect();\r\n  }\r\n\r\n  getAllPrintManifestations() {\r\n    this.getterService.getAllPrintManifestations(this.protokollRequest).subscribe(\r\n      data => {\r\n        if (data.length === 0) {\r\n          this.sendMessage('error', 'nothingFound');\r\n        } else {\r\n          data.forEach(entry => {\r\n            this.getterService.printManifestations.set(entry.titleID, entry);\r\n            const recKey = entry.bibliographicInformation.recKey;\r\n            if ('' !== recKey) {\r\n              if (!this.recKeys.has(recKey)) {\r\n                this.recKeys.add(recKey);\r\n              }\r\n            }\r\n          });\r\n        }\r\n        this.primaryLoad = false;\r\n      },\r\n      error => {\r\n        this.sendMessage('error', 'error');\r\n        this.primaryLoad = false;\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        this.filterService.buildPrintFilterlist(this.getterService.printManifestations);\r\n        if (!(typeof this.protokollRequest.collections === 'undefined' || this.protokollRequest.collections.trim() === '')) {\r\n          this.filterService.includeSelectionFromHttpParamters(this.protokollRequest.collections);\r\n        }\r\n        this.filterService.applyPrintFilter(this.getterService.printManifestations);\r\n        this.collectPrimoResponses();\r\n        this.busy = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  getDigitalManifestations() {\r\n    this.getterService.getAllDigitalManifestations(this.protokollRequest).subscribe(\r\n      data => {\r\n        if (data.length === 0) {\r\n          this.sendMessage('error', 'nothingFound');\r\n        } else {\r\n          data.forEach(record => {\r\n            this.getterService.digitalManifestations.set(record.identifier, record);\r\n            this.filterService.filterList[record.identifier] = true;\r\n          });\r\n        }\r\n        this.primaryLoad = false;\r\n      },\r\n      error => {\r\n        this.sendMessage('error', 'error');\r\n        this.primaryLoad = false;\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        this.filterService.buildDigitalFilterlist(this.getterService.digitalManifestations);\r\n        this.filterService.applyDigitalFilter(this.getterService.digitalManifestations);\r\n        this.collectPrimoResponses();\r\n        this.busy = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  collectPrimoResponses() {\r\n    this.getterService.printManifestations.forEach(\r\n      (value, key) => {\r\n        if (!this.getterService.primoData.has(key)) {\r\n          let isbn = value.bibliographicInformation.isbn;\r\n          if ('' !== isbn) {\r\n            isbn = isbn.replace('ISBN', '').trim();\r\n            isbn = isbn.replace(/-/g, '').trim();\r\n            if (isbn.length > 13) {\r\n              if (isbn.startsWith('978')) {\r\n                isbn = isbn.substring(0, 13);\r\n              } else {\r\n                isbn = isbn.substring(0, 10);\r\n              }\r\n            }\r\n          }\r\n          if (isbn.length === 13) {\r\n            this.getterService.searchPrimoForIsbn(isbn).subscribe(\r\n              data => this.storePrimoResponse(data),\r\n              error => console.log(error),\r\n              () => this.extendManifestations()\r\n            );\r\n          } else {\r\n            this.getterService.searchPrimoForShelfmark(value.shelfmark).subscribe(\r\n              data => this.storePrimoResponse(data),\r\n              error => console.log(error),\r\n              () => this.extendManifestations()\r\n            );\r\n          }\r\n        }\r\n      });\r\n    this.getterService.digitalManifestations.forEach(\r\n      (value, key) => {\r\n        if (!this.getterService.primoData.has(key)) {\r\n          this.getterService.searchPrimoForIsbn(key).subscribe(\r\n            data => this.storePrimoResponse(data),\r\n            error => console.log(error),\r\n            () => this.extendManifestations()\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  storePrimoResponse(data: PrimoResponse) {\r\n    data.electronic.forEach(\r\n      entry => {\r\n        if (!this.getterService.primoData.has(entry.isbn)) {\r\n          this.getterService.primoData.set(entry.isbn, entry);\r\n        }\r\n      }\r\n    );\r\n    data.print.forEach(\r\n      entry => {\r\n        if (!this.getterService.primoData.has(entry.recordId)) {\r\n          this.getterService.primoData.set(entry.recordId, entry);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  extendManifestations() {\r\n    this.getterService.primoData.forEach((value, key) => {\r\n        if ('Online Resource' === value.type) {\r\n          if (!this.getterService.digitalManifestations.has(key)) {\r\n            let collected = false;\r\n            for (const keyInd of key.split(';')) {\r\n              if (keyInd.trim() !== '') {\r\n                if (!collected) {\r\n                  if (value.doi !== '') {\r\n                    this.getterService.getDigitalManifestationByIdentifiers(keyInd, value.doi).subscribe(\r\n                      dm => {\r\n                        if (dm.usage.length > 0) {\r\n                          this.filterService.addDigitalManifestationToFilterlist(dm);\r\n                          this.getterService.digitalManifestations.set(key, dm);\r\n                          collected = true;\r\n                          this.updateData();\r\n                        } else {\r\n                          this.sendMessage('warn', 'noUsage');\r\n                        }\r\n                      }, error => this.sendMessage('error', 'noConnection'));\r\n                  } else {\r\n                    this.getterService.getDigitalManifestation(key).subscribe(\r\n                      dm => {\r\n                        if (dm.usage.length > 0) {\r\n                          this.filterService.addDigitalManifestationToFilterlist(dm);\r\n                          this.getterService.digitalManifestations.set(keyInd, dm);\r\n                          collected = true;\r\n                          this.updateData();\r\n                        } else {\r\n                          this.sendMessage('warn', 'noUsage');\r\n                        }\r\n                      }, error => this.sendMessage('error', 'noConnection')\r\n                    );\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else if ('Physical Item' === value.type) {\r\n          if (!this.recKeys.has(key)) {\r\n            let shelfmark = value.shelfmarks;\r\n            if (value.shelfmarks.indexOf(';') > 0) {\r\n              shelfmark = shelfmark.substring(0, shelfmark.indexOf(';'));\r\n            }\r\n            shelfmark = shelfmark.substring(shelfmark.indexOf(' '), shelfmark.length);\r\n            const protokollrequest = new ProtokollRequest();\r\n            protokollrequest.shelfmark = shelfmark;\r\n            protokollrequest.exact = true;\r\n            this.getterService.getAllPrintManifestations(protokollrequest).subscribe(\r\n              pm => {\r\n                pm.forEach(entry => {\r\n                    this.getterService.printManifestations.set(entry.titleID, entry);\r\n                    this.filterService.addPrintManifestationToFilterlist(entry);\r\n                    const recKey = entry.bibliographicInformation.recKey;\r\n                    if ('' !== recKey) {\r\n                      if (!this.recKeys.has(recKey)) {\r\n                        this.recKeys.add(recKey);\r\n                      }\r\n                    }\r\n                  }\r\n                );\r\n              },\r\n              error => this.sendMessage('warn', 'noUsage')\r\n            );\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  updateData() {\r\n    if (this.filterService.selectedEvents) {\r\n      this.dataService.generatePrintData(this.filterService.selectedPrintManifestations, this.filterService.selectedEvents);\r\n    }\r\n    if (this.filterService.selectedDigitalUsage) {\r\n      this.dataService.generateDigitalData(this.filterService.selectedDigitalManifestations);\r\n    }\r\n  }\r\n\r\n  copyLink() {\r\n    const url = location.href.split('?')[0] + '?' + this.protokollRequest.asUrlParamters();\r\n    this.clipboardService.copyFromContent(url);\r\n    this.messageService.add({\r\n      severity: 'success',\r\n      summary: 'Link kopiert',\r\n      detail: 'Der Link wurde in die Ziwschenablage eingefügt'\r\n    });\r\n  }\r\n\r\n  sendMessage(level: string, error: string) {\r\n    this.messages = [];\r\n    switch (level) {\r\n      case 'error': {\r\n        this.messages.push({\r\n          severity: error, summary: 'Fehler: ',\r\n          detail: this.translateService.instant('message.' + error)\r\n        });\r\n      }\r\n    }\r\n    this.status = level;\r\n    this.busy = false;\r\n  }\r\n\r\n  sendToElisa() {\r\n    this.messages = [];\r\n    let message = {};\r\n    this.elisaService.sendToElisa().subscribe(\r\n      data => {\r\n        this.response = data;\r\n        message = this.messages.push({\r\n          severity: 'success',\r\n          summary: 'Erfolg: ',\r\n          detail: this.translateService.instant('message.elisa.submitted')\r\n        });\r\n      },\r\n      error => this.messages.push({\r\n        severity: 'error',\r\n        summary: 'Fehler: ',\r\n        detail: this.translateService.instant('no.elisa.connection')\r\n      })\r\n    );\r\n    this.messages.push(message);\r\n    this.filterService.show['elisa'] = false;\r\n  }\r\n}\r\n","import {HttpHeaders} from '@angular/common/http';\r\n\r\nexport const settingsUrl = '/api/settings';\r\nexport const getterUrl = '/getter';\r\nexport const headersJson = new HttpHeaders().set('Content-Type', 'application/json');\r\nexport const headersForm = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\r\nexport const headersConnect = new HttpHeaders().set('Content-Type', 'text/uri-list');\r\nexport const counterretrievalUrl = '/api/counterretrieval';\r\nexport const stockanalyzerUrl = '/api/stockanalyzer';\r\nexport const elisaUrl = '/service/elisa/sendToElisa';\r\n","///<reference path='../../node_modules/primeng/components/common/menuitem.d.ts'/>\nimport {AppComponent} from './app.component';\nimport {RouterModule} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {DataTableModule} from 'primeng/components/datatable/datatable';\nimport {\n  TabMenuModule,\n  ToggleButtonModule,\n  DialogModule,\n  InputTextModule,\n  ButtonModule,\n  TooltipModule,\n  MessagesModule,\n  CheckboxModule,\n  PanelModule,\n  ScrollPanelModule,\n  TabViewModule,\n  AccordionModule,\n  SelectButtonModule,\n  TieredMenuModule,\n  InputSwitchModule,\n  SlideMenuModule, InputTextareaModule, DropdownModule, SpinnerModule, OverlayPanelModule\n} from 'primeng/primeng';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule, DecimalPipe} from '@angular/common';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {GetterService} from './service/getter.service';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {DEFAULT_TIMEOUT, defaultTimeout, TimeoutInterceptor} from './TimeoutInterceptor';\nimport {TranslateModule} from './translate/translate.module';\nimport {SliderModule} from 'primeng/slider';\nimport {HighchartsChartModule} from 'highcharts-angular';\nimport {ClipboardModule, ClipboardService} from 'ngx-clipboard';\nimport {MessageService} from 'primeng/api';\nimport {VirtualScrollerModule} from 'primeng/virtualscroller';\nimport {StockmanagementComponent} from './stockmanagement.component';\nimport {AuthenticationService} from './service/authentication.service';\nimport {ElisaService} from './service/elisa.service';\nimport {MemorylistService} from './service/memorylist.service';\nimport {TableModule} from 'primeng/table';\nimport {FilterService} from './service/filter.service';\nimport {FilterComponent} from './filter.component';\nimport {protokollRouting} from './app.routing';\nimport {DataService} from './service/data.service';\n\n@NgModule({\n  imports: [HttpClientModule,\n    VirtualScrollerModule,\n    ButtonModule,\n    TooltipModule,\n    InputTextModule,\n    TieredMenuModule,\n    ClipboardModule,\n    PanelModule,\n    CheckboxModule,\n    InputSwitchModule,\n    MessagesModule,\n    SlideMenuModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    SelectButtonModule,\n    CommonModule,\n    ScrollPanelModule,\n    TabViewModule,\n    SliderModule,\n    RouterModule,\n    InputTextareaModule,\n    AccordionModule,\n    DropdownModule,\n    SpinnerModule,\n    OverlayPanelModule,\n    FormsModule,\n    DataTableModule,\n    ToggleButtonModule,\n    TranslateModule,\n    TabMenuModule,\n    protokollRouting,\n    DialogModule,\n    TableModule, SlideMenuModule],\n  declarations: [AppComponent, StockmanagementComponent, FilterComponent],\n  bootstrap: [AppComponent],\n  providers: [GetterService, FilterService, DataService, DecimalPipe, ClipboardService, MessageService, AuthenticationService,\n    MemorylistService, ElisaService, [{provide: HTTP_INTERCEPTORS, useClass: TimeoutInterceptor, multi: true}],\n    [{provide: DEFAULT_TIMEOUT, useValue: defaultTimeout}]]\n})\n\nexport class AppModule {\n}\n","import {ModuleWithProviders} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'overview', pathMatch: 'full'},\r\n  {path: 'overview', loadChildren: './overview/overview.module#OverviewModule'},\r\n  {path: 'bibliography',  loadChildren: './bibliography/bibliography.module#BibliographyModule'},\r\n  {path: 'itemlist', loadChildren: './itemlist/itemlist.module#ItemlistModule'},\r\n  {path: 'eventlist', loadChildren: './eventlist/eventlist.module#EventlistModule'},\r\n  {path: 'analysis', loadChildren: './analysis/analysis.module#AnalysisModule'},\r\n  {path: 'statistics', loadChildren: './statistics/statistics.module#StatisticsModule'},\r\n  {path: 'usage', loadChildren: './usage/usage.module#UsageModule'}\r\n];\r\n\r\nexport const protokollRouting: ModuleWithProviders = RouterModule.forRoot(routes);\r\n","module.exports = \"<div *ngIf=\\\"(getterService.printManifestations.size +  getterService.digitalManifestations.size) > 0\\\">\\r\\n  <p-scrollPanel [style]=\\\"{width: '100%', height: '100%'}\\\">\\r\\n    <h3  *ngIf=\\\"getterService.printManifestations.size > 0\\\" (click)=\\\"toggleShow('editions')\\\">{{'editions' | translate}} <i\\r\\n      [ngClass]=\\\"filterService.show['editions'] ? 'pi pi-caret-down' : 'pi pi-caret-right'\\\"></i></h3>\\r\\n    <div *ngIf=\\\"filterService.show['editions'] && getterService.printManifestations.size > 0\\\" class=\\\"ui-g\\\">\\r\\n      <div *ngFor=\\\"let m of getterService.printManifestations | keyvalue\\\" class=\\\"ui-g-12\\\">\\r\\n        <p-checkbox [(ngModel)]=\\\"filterService.filterList[m.value.titleID]\\\" binary=\\\"true\\\" (onChange)=\\\"sendEvent()\\\"\\r\\n                    label=\\\"{{m.value.edition}}. Auflage: {{m.value.shelfmark}}   <{{filterService.statsManifestations.get(m.value.titleID)}} Ex.>\\\"\\r\\n                    pTooltip=\\\"{{m.value.bibliographicInformation.authors}}:\\r\\n          {{m.value.bibliographicInformation.title}}, {{m.value.bibliographicInformation.year}}.\\\"></p-checkbox>\\r\\n      </div>\\r\\n    </div>\\r\\n    <h3 *ngIf=\\\"getterService.printManifestations.size > 0\\\" (click)=\\\"toggleShow('collections')\\\">{{'collections' | translate}} <i\\r\\n      [ngClass]=\\\"filterService.show['collections'] ? 'pi pi-caret-down' : 'pi pi-caret-right'\\\"></i></h3>\\r\\n    <div *ngIf=\\\"filterService.show['collections'] && getterService.printManifestations.size > 0\\\" class=\\\"ui-g\\\">\\r\\n      <div *ngFor=\\\"let m of filterService.uniqueCollections\\\" class=\\\"ui-g-12\\\">\\r\\n        <p-checkbox [(ngModel)]=\\\"filterService.filterList[m]\\\" binary=\\\"true\\\" (onChange)=\\\"sendEvent()\\\"\\r\\n                    label=\\\"{{m}} <{{filterService.statsCollection.get(m)}} Ex.>\\\"></p-checkbox>\\r\\n      </div>\\r\\n    </div>\\r\\n    <h3 *ngIf=\\\"getterService.printManifestations.size > 0\\\" (click)=\\\"toggleShow('materials')\\\">{{'materials' | translate}} <i\\r\\n      [ngClass]=\\\"filterService.show['materials'] ? 'pi pi-caret-down' : 'pi pi-caret-right'\\\"></i></h3>\\r\\n    <div *ngIf=\\\"filterService.show['materials'] && getterService.printManifestations.size > 0\\\" class=\\\"ui-g\\\">\\r\\n      <div *ngFor=\\\"let m of filterService.uniqueMaterials\\\" class=\\\"ui-g-12\\\">\\r\\n        <p-checkbox [(ngModel)]=\\\"filterService.filterList[m]\\\" binary=\\\"true\\\" (onChange)=\\\"sendEvent()\\\"\\r\\n                    label=\\\"{{'material.' + m | translate}} <{{filterService.statsMaterials.get(m)}} Ex.>\\\"></p-checkbox>\\r\\n      </div>\\r\\n    </div>\\r\\n    <h3 *ngIf=\\\"getterService.digitalManifestations.size > 0\\\" (click)=\\\"toggleShow('digital')\\\">{{'E-Books'}} <i\\r\\n      [ngClass]=\\\"filterService.show['digital'] ? 'pi pi-caret-down' : 'pi pi-caret-right'\\\"></i></h3>\\r\\n    <div *ngIf=\\\"filterService.show['digital']\\\" class=\\\"ui-g\\\">\\r\\n      <div *ngFor=\\\"let m of getterService.digitalManifestations | keyvalue\\\" class=\\\"ui-g-12\\\">\\r\\n        <p-checkbox [(ngModel)]=\\\"filterService.filterList[m.value.identifier]\\\" binary=\\\"true\\\" (onChange)=\\\"sendEvent()\\\"\\r\\n                    label=\\\"{{m.value.identifier}}\\\"></p-checkbox>\\r\\n      </div>\\r\\n    </div>\\r\\n  </p-scrollPanel>\\r\\n</div>\\r\\n\"","import {Component, EventEmitter, OnInit} from '@angular/core';\r\nimport {GetterService} from './service/getter.service';\r\nimport {FilterService} from './service/filter.service';\r\nimport {DataService} from './service/data.service';\r\n\r\n@Component({\r\n  selector: 'app-filter',\r\n  templateUrl: 'filter.component.html'\r\n})\r\nexport class FilterComponent implements OnInit {\r\n\r\n\r\n  constructor(public getterService: GetterService,\r\n              public filterService: FilterService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toggleShow(feature: string) {\r\n    this.filterService.show[feature] = !this.filterService.show[feature];\r\n  }\r\n\r\n  sendEvent() {\r\n    this.filterService.applyPrintFilter(this.getterService.printManifestations);\r\n  }\r\n}\r\n","import {ElisaTitleData} from './ElisaTitleData';\r\n\r\nexport class ElisaTitle {\r\n\r\n  constructor(public title: ElisaTitleData) {}\r\n}\r\n","export class ElisaTitleData {\r\n\r\n  constructor(public notizIntern: string,\r\n              public notiz: string,\r\n              public isbn: string) {}\r\n}\r\n","import {MemoryListItem} from './MemoryListItem';\r\n\r\nexport class Memorylist {\r\n  constructor(\r\n    public created: Date,\r\n    public lastChange: Date,\r\n    public name: string,\r\n    public savedItems: MemoryListItem[],\r\n    public description: string,\r\n    public id?: string\r\n  ) {\r\n  }\r\n}\r\n","export class ProtokollRequest {\r\n\r\n\r\n  public collections = '';\r\n  public materials = '';\r\n  public exact = false;\r\n  public shelfmark = '';\r\n\r\n  private type = '';\r\n\r\n  private barcodeRegExp: RegExp = new RegExp('^[Dd]*[Ee][0-9]{3}[0-9]+');\r\n\r\n  private collectionRegExp: RegExp = new RegExp('^[DdEe][0-9][0-9]');\r\n\r\n  private isbnRegExp: RegExp = new RegExp('978[0-9]{9}[0-9X]');\r\n\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public update() {\r\n    this.checkForCollections();\r\n    this.determineType();\r\n  }\r\n\r\n  public asUrlParamters(): string {\r\n    let url = 'shelfmark=' + this.shelfmark;\r\n    if (this.collections !== '') {\r\n      url = url + '&collections=' + this.collections;\r\n    }\r\n    if (this.materials !== '') {\r\n      url = url + '&materials=' + this.materials;\r\n    }\r\n    if (this.exact) {\r\n      url = url + '&exact=true';\r\n    }\r\n    return url;\r\n  }\r\n\r\n  public getType(): string {\r\n    this.determineType();\r\n    return this.type;\r\n  }\r\n\r\n  private determineType() {\r\n    let test = this.shelfmark;\r\n    if (test.indexOf(' ') !== -1) {\r\n      test = test.substring(0, test.indexOf(' '));\r\n    }\r\n    test = test.replace(/-/g, '').trim();\r\n    if (this.isbnRegExp.test(test)) {\r\n      this.type = 'ebook';\r\n    } else if (this.barcodeRegExp.test(test)) {\r\n      this.type = 'barcode';\r\n    } else {\r\n      this.type = 'shelfmark';\r\n    }\r\n  }\r\n\r\n  private checkForCollections() {\r\n    let shelfmark = this.shelfmark.trim();\r\n    if (this.collectionRegExp.test(shelfmark)) {\r\n      this.collections = this.collectionRegExp.exec(shelfmark)[0];\r\n      shelfmark = shelfmark.replace(this.collections, '');\r\n      shelfmark = shelfmark.replace(':', '');\r\n      shelfmark = shelfmark.replace('=', '');\r\n      shelfmark = shelfmark.replace(';', '');\r\n      this.shelfmark = shelfmark.trim();\r\n    }\r\n  }\r\n}\r\n","import {ElisaTitle} from './ElisaTitle';\r\n\r\nexport class ProtokollToElisaRequest {\r\n\r\n  constructor(private notepadName: string,\r\n              private userID: string,\r\n              private titles: ElisaTitle[]) {}\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Principal} from '../model/Principal';\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n  public principal: Principal;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  updatePrincipal(): Observable<Principal> {\r\n    const observable = this.http.get<Principal>(\r\n      '/activeuser'\r\n      // '/assets/data/example_authentication.json'\r\n    );\r\n    observable.subscribe( value => this.principal = value);\r\n    return observable;\r\n  }\r\n\r\n  logout(): void {\r\n    this.http.post('/logout', {}, {responseType: 'text'}).subscribe(\r\n      () => this.principal = null\r\n    );\r\n  }\r\n}\r\n","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {PrintManifestation} from '../model/PrintManifestation';\r\nimport {Event} from '../model/Event';\r\nimport {DigitalManifestation} from '../model/DigitalManifestation';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DataService {\r\n\r\n  printData: Map<string, number[][]>;\r\n\r\n  digitalData: Map<string, number[][]>;\r\n\r\n  groupedData: Map<string, number[][]>;\r\n\r\n  title: string;\r\n\r\n  public dataChanged$: EventEmitter<string>;\r\n\r\n  constructor() {\r\n    this.dataChanged$ = new EventEmitter();\r\n  }\r\n\r\n  generatePrintData(printManifestations: PrintManifestation[], selectedEvents: Event[]) {\r\n    this.printData = new Map<string, number[][]>();\r\n    this.groupedData = new Map<string, number[][]>();\r\n    if (printManifestations.length === 1) {\r\n      const manifestation: PrintManifestation = printManifestations[0];\r\n      this.title = manifestation.shelfmark + ' (' + manifestation.edition + '. Auflage)';\r\n    } else {\r\n      let title = '';\r\n      printManifestations.forEach(manifestation => title = title + manifestation.shelfmark + ', ');\r\n      this.title = title.substr(0, title.length - 2);\r\n    }\r\n    selectedEvents.sort(function (firstEvent, secondEvent) {\r\n      return firstEvent.time === secondEvent.time ? 0 : +(firstEvent.time > secondEvent.time) || -1;\r\n    });\r\n    for (const event of selectedEvents) {\r\n      if (event.type === 'loan' || event.type === 'return') {\r\n        this.addDatapointToMap(event, 'loans', this.printData);\r\n        this.addDatapointToMap(event, event.borrowerStatus, this.groupedData);\r\n      } else if (event.type === 'request' || event.type === 'hold') {\r\n        this.addDatapointToMap(event, 'requests', this.printData);\r\n      } else if (event.type === 'inventory' || event.type === 'deletion') {\r\n        this.addDatapointToMap(event, 'stock', this.printData);\r\n        this.addDatapointToMap(event, 'stock', this.groupedData);\r\n      } else if (event.type === 'cald' || event.type === 'caldDelivery') {\r\n        this.addDatapointToMap(event, 'cald', this.printData);\r\n      }\r\n    }\r\n    this.dataChanged$.emit('print');\r\n  }\r\n\r\n  generateDigitalData(digitalDataList: DigitalManifestation[]) {\r\n    this.digitalData = new Map<string, number[][]>();\r\n    digitalDataList.forEach(\r\n      entry => {\r\n        this.title = entry.title;\r\n        let list: number[][] = [];\r\n        for (const counter of entry.usage) {\r\n          const date = new Date(counter.year, counter.month, 15);\r\n          const values: number[] = [date.getTime(), counter.totalRequests];\r\n          list.push(values);\r\n        }\r\n        list = list.sort((n1, n2) => n1[0] - n2[0]);\r\n        this.digitalData.set(String(entry.identifier), list);\r\n        /*for (const counter of entry.usage) {\r\n          const keyTest = counter.year + '-' + counter.month;\r\n          if (this.filterService.selectedDigitalUsage.has(keyTest)) {\r\n            this.filterService.selectedDigitalUsage.get(keyTest).totalRequests += counter.totalRequests;\r\n          } else {\r\n            this.filterService.selectedDigitalUsage.set(keyTest, counter);\r\n          }\r\n        }*/\r\n      }\r\n    );\r\n  }\r\n\r\n  private addDatapointToMap(event: Event, classOfEvent: string, map: Map<string, number[][]>) {\r\n    if (event.time > 0) {\r\n      let list: number[][];\r\n      if ((typeof map.get(classOfEvent) === 'undefined')) {\r\n        list = [];\r\n        list.push([event.time, 1]);\r\n      } else {\r\n        list = map.get(classOfEvent);\r\n        const lastDatapoint = list[list.length - 1];\r\n        list.push([event.time, lastDatapoint[1]]);\r\n        list.push([event.time, lastDatapoint[1] + event.delta]);\r\n      }\r\n      map.set(classOfEvent, list);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.digitalData = new Map<string, number[][]>();\r\n    this.printData = new Map<string, number[][]>();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport * as appGlobals from '../app.globals';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {ProtokollToElisaRequest} from '../model/ProtokollToElisaRequest';\r\nimport {ElisaData} from '../model/ElisaData';\r\nimport {ElisaTitleData} from '../model/ElisaTitleData';\r\nimport {ElisaTitle} from '../model/ElisaTitle';\r\nimport {PrimoData} from '../model/PrimoData';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ElisaService {\r\n\r\n  public elisaData: ElisaData[];\r\n\r\n  public elisaTitleData: ElisaTitleData;\r\n\r\n  public notepad = 'Ausleihprotokoll';\r\n\r\n  private notizIntern = 'X Exemplare aus Etat ';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  createElisaRequest(isbn: string, shortShelfmarks: string) {\r\n    const libraryNote = 'E/D??:1, NB ' + shortShelfmarks;\r\n    this.elisaTitleData = new ElisaTitleData(this.notizIntern, libraryNote, isbn);\r\n  }\r\n\r\n  sendToElisa(): Observable<string> {\r\n    const titles = [];\r\n    titles.push(new ElisaTitle(this.elisaTitleData));\r\n    const protokollToElisaRequest = new ProtokollToElisaRequest(this.notepad, this.elisaData[0].elisaUserId, titles);\r\n    return this.http.post<string>(appGlobals.elisaUrl, JSON.stringify(protokollToElisaRequest), {headers: appGlobals.headersJson});\r\n  }\r\n\r\n  setElisaData(username: string): Observable<ElisaData[]> {\r\n    const url = appGlobals.settingsUrl + '/elisadata/forLibintel/' + username;\r\n    // const url = '/assets/data/elisa_data_example.json';\r\n    const observable: Observable<ElisaData[]> = this.http.get<ElisaData[]>(url);\r\n    observable.subscribe(value => this.elisaData = value);\r\n    return observable;\r\n  }\r\n}\r\n","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {PrintManifestation} from '../model/PrintManifestation';\r\nimport {DigitalManifestation} from '../model/DigitalManifestation';\r\nimport {Event} from '../model/Event';\r\nimport {Item} from '../model/Item';\r\nimport {EbookCounter} from '../model/EbookCounter';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FilterService {\r\n\r\n  public show: object;\r\n\r\n  filterList: object;\r\n  selectedPrintManifestations: PrintManifestation[];\r\n  selectedDigitalManifestations: DigitalManifestation[];\r\n  selectedEvents: Event[];\r\n  selectedItems: Item[];\r\n  public uniqueCollections: string[];\r\n  public uniqueMaterials: string[];\r\n  private uniqueCollectionsSet: Set<string>;\r\n  private uniqueMaterialsSet: Set<string>;\r\n  private filteredItems: Map<string, Item[]>;\r\n  private filteredEvents: Map<string, Event[]>;\r\n  public filteredManifestations: Map<string, PrintManifestation>;\r\n  public selectedDigitalUsage: Map<string, EbookCounter[]>;\r\n  public selectedShelfmarks: Set<string>;\r\n  public selectedCollections: Set<string>;\r\n  statsCollection: Map<string, number>;\r\n  statsMaterials: Map<string, number>;\r\n  statsManifestations: Map<string, number>;\r\n\r\n  public filterChanged$: EventEmitter<string>;\r\n\r\n  constructor() {\r\n    this.filterChanged$ = new EventEmitter();\r\n    this.resetFilter();\r\n  }\r\n\r\n  resetFilter() {\r\n    this.show = {};\r\n    this.filterList = {};\r\n    this.uniqueCollections = [];\r\n    this.uniqueMaterials = [];\r\n    this.uniqueCollectionsSet = new Set<string>();\r\n    this.uniqueMaterialsSet = new Set<string>();\r\n  }\r\n\r\n  resetPrintSelection() {\r\n    this.selectedPrintManifestations = [];\r\n    this.selectedEvents = [];\r\n    this.selectedItems = [];\r\n    this.filteredManifestations = new Map<string, PrintManifestation>();\r\n    this.filteredItems = new Map<string, Item[]>();\r\n    this.filteredEvents = new Map<string, Event[]>();\r\n    this.statsCollection = new Map<string, number>();\r\n    this.statsMaterials = new Map<string, number>();\r\n    this.statsManifestations = new Map<string, number>();\r\n    this.selectedCollections = new Set<string>();\r\n    this.selectedShelfmarks = new Set<string>();\r\n  }\r\n\r\n  resetDigitalSelection() {\r\n    this.selectedDigitalManifestations = [];\r\n    this.selectedDigitalUsage = new Map<string, EbookCounter[]>();\r\n  }\r\n\r\n  buildPrintFilterlist(printManifestations: Map<string, PrintManifestation>) {\r\n    this.resetFilter();\r\n    if (printManifestations && printManifestations.size > 0) {\r\n      this.show['editions'] = true;\r\n      this.show['materials'] = true;\r\n      this.show['collections'] = true;\r\n      this.show['filter'] = true;\r\n      this.show['print'] = true;\r\n      printManifestations.forEach(value => {\r\n        this.filterList[value.titleID] = true;\r\n        value.collections.forEach(collection => {\r\n          if (!this.uniqueCollectionsSet.has(collection)) {\r\n            this.uniqueCollectionsSet.add(collection);\r\n            this.filterList[collection] = (collection !== '???');\r\n          }\r\n        });\r\n        value.materials.forEach(material => {\r\n          if (!this.uniqueMaterialsSet.has(material)) {\r\n            this.uniqueMaterialsSet.add(material);\r\n            this.filterList[material] = true;\r\n          }\r\n        });\r\n      });\r\n      this.uniqueMaterials = Array.from(this.uniqueMaterialsSet).sort();\r\n      this.uniqueCollections = Array.from(this.uniqueCollectionsSet).sort();\r\n    }\r\n  }\r\n\r\n  buildDigitalFilterlist(digitalManifestations: Map<string, DigitalManifestation>) {\r\n    if (digitalManifestations && digitalManifestations.size > 0) {\r\n      digitalManifestations.forEach((value) => this.filterList[value.identifier] = true);\r\n      this.show['digital'] = true;\r\n      this.show['filter'] = true;\r\n    }\r\n  }\r\n\r\n  includeSelectionFromHttpParamters(collections: string) {\r\n    let individualCollections: string[] = [];\r\n    if (collections.indexOf(' ') > -1) {\r\n      individualCollections = collections.split(' ');\r\n    } else {\r\n      individualCollections.push(collections);\r\n    }\r\n    for (const f of this.uniqueCollections) {\r\n      let fitting = false;\r\n      for (const m of individualCollections) {\r\n        fitting = f.startsWith(m.trim().toUpperCase());\r\n        if (fitting) {\r\n          break;\r\n        }\r\n      }\r\n      this.filterList[f] = fitting;\r\n    }\r\n  }\r\n\r\n  addPrintManifestationToFilterlist(printManifestation: PrintManifestation) {\r\n    if (this.filterList[printManifestation.titleID] !== true) {\r\n      this.filterList[printManifestation.titleID] = true;\r\n      this.selectedPrintManifestations.push(printManifestation);\r\n      this.filteredManifestations[printManifestation.titleID] = printManifestation;\r\n      this.statsManifestations.set(printManifestation.titleID, 0);\r\n\r\n      printManifestation.collections.forEach(collection => {\r\n        if (!this.uniqueCollectionsSet.has(collection)) {\r\n          this.uniqueCollectionsSet.add(collection);\r\n          this.filterList[collection] = (collection !== '???');\r\n          this.statsCollection.set(collection, 0);\r\n        }\r\n      });\r\n\r\n      printManifestation.materials.forEach(material => {\r\n        if (!this.uniqueMaterialsSet.has(material)) {\r\n          this.uniqueMaterialsSet.add(material);\r\n          this.statsMaterials.set(material, 0);\r\n          this.filterList[material] = true;\r\n        }\r\n      });\r\n\r\n      const filteredItemsInd: Item[] = [];\r\n      const filteredEventsInd: Event[] = [];\r\n      for (const item of printManifestation.items) {\r\n        if (this.filterList[item.collection]) {\r\n          filteredItemsInd.push(item);\r\n          this.selectedItems.push(item);\r\n          if (item.deletionDate === '') {\r\n            let numberCollections = this.statsCollection.get(item.collection);\r\n            numberCollections++;\r\n            this.statsCollection.set(item.collection, numberCollections);\r\n            let numberMaterials = this.statsMaterials.get(item.material);\r\n            numberMaterials++;\r\n            this.statsMaterials.set(item.material, numberMaterials);\r\n            let numberManifestations = this.statsManifestations.get(printManifestation.titleID);\r\n            numberManifestations++;\r\n            this.statsManifestations.set(printManifestation.titleID, numberManifestations);\r\n          }\r\n          for (const event of item.events) {\r\n            if (!(event.type === 'inventory' || event.type === 'deletion') && event.borrowerStatus === '12') {\r\n              continue;\r\n            }\r\n            filteredEventsInd.push(event);\r\n            this.selectedEvents.push(event);\r\n            if (event.endEvent != null) {\r\n              this.selectedEvents.push(event.endEvent);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.filteredEvents[printManifestation.titleID] = filteredEventsInd;\r\n      this.filteredItems[printManifestation.titleID] = filteredItemsInd;\r\n      this.uniqueMaterials = Array.from(this.uniqueMaterialsSet).sort();\r\n      this.uniqueCollections = Array.from(this.uniqueCollectionsSet).sort();\r\n      this.selectedEvents.sort(function (firstEvent, secondEvent) {\r\n        return firstEvent.time === secondEvent.time ? 0 : +(firstEvent.time > secondEvent.time) || -1;\r\n      });\r\n    }\r\n  }\r\n\r\n  addDigitalManifestationToFilterlist(digitalManifestation: DigitalManifestation) {\r\n    this.selectedDigitalManifestations.push(digitalManifestation);\r\n    this.selectedDigitalUsage.set(digitalManifestation.identifier, digitalManifestation.usage);\r\n    this.filterList[digitalManifestation.identifier] = true;\r\n  }\r\n\r\n  applyPrintFilter(printManifestations: Map<string, PrintManifestation>) {\r\n    this.resetPrintSelection();\r\n    this.uniqueCollections.forEach(\r\n      entry => this.statsCollection.set(entry, 0)\r\n    );\r\n    this.uniqueMaterials.forEach(\r\n      entry => this.statsMaterials.set(entry, 0)\r\n    );\r\n    printManifestations.forEach(\r\n      printManifestation => {\r\n        this.statsManifestations.set(printManifestation.titleID, 0);\r\n        const filteredItemsInd: Item[] = [];\r\n        const filteredEventsInd: Event[] = [];\r\n        if (this.filterList[printManifestation.titleID]) {\r\n          this.selectedPrintManifestations.push(printManifestation);\r\n\r\n          for (const item of printManifestation.items) {\r\n            if (this.filterList[item.collection] && this.filterList[item.material]) {\r\n              this.selectedCollections.add(item.collection);\r\n              this.selectedShelfmarks.add(item.shelfmark);\r\n              this.selectedItems.push(item);\r\n              filteredItemsInd.push(item);\r\n              if (item.deletionDate === '') {\r\n                let numberCollections = this.statsCollection.get(item.collection);\r\n                numberCollections++;\r\n                this.statsCollection.set(item.collection, numberCollections);\r\n\r\n                let numberMaterials = this.statsMaterials.get(item.material);\r\n                numberMaterials++;\r\n                this.statsMaterials.set(item.material, numberMaterials);\r\n\r\n                let numberManifestations = this.statsManifestations.get(printManifestation.titleID);\r\n                numberManifestations++;\r\n                this.statsManifestations.set(printManifestation.titleID, numberManifestations);\r\n              }\r\n              for (const event of item.events) {\r\n                if (!(event.type === 'inventory' || event.type === 'deletion') && event.borrowerStatus === '12') {\r\n                  continue;\r\n                }\r\n                filteredEventsInd.push(event);\r\n                this.selectedEvents.push(event);\r\n                if (event.endEvent != null) {\r\n                  this.selectedEvents.push(event.endEvent);\r\n                }\r\n              }\r\n            }\r\n          }\r\n          this.filteredManifestations[printManifestation.titleID] = printManifestation;\r\n          this.filteredEvents[printManifestation.titleID] = filteredEventsInd;\r\n          this.filteredItems[printManifestation.titleID] = filteredItemsInd;\r\n        }\r\n      }\r\n    );\r\n    this.selectedEvents.sort(function (firstEvent, secondEvent) {\r\n      return firstEvent.time === secondEvent.time ? 0 : +(firstEvent.time > secondEvent.time) || -1;\r\n    });\r\n    this.filterChanged$.emit('filterChanged');\r\n  }\r\n\r\n  applyDigitalFilter(digitalManifestations: Map<string, DigitalManifestation>) {\r\n    this.resetDigitalSelection();\r\n    digitalManifestations.forEach(\r\n      digitalManifestation => {\r\n        if (this.filterList[digitalManifestation.identifier]) {\r\n          this.selectedDigitalManifestations.push(digitalManifestation);\r\n          this.selectedDigitalUsage.set(digitalManifestation.identifier, digitalManifestation.usage);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getFilteredTitleIds(): string {\r\n    let titleIds = '';\r\n    this.filteredManifestations.forEach(\r\n      (key, value) => titleIds = titleIds + key + '; '\r\n    );\r\n    titleIds = titleIds.substring(0, titleIds.length - 2 );\r\n    return titleIds;\r\n\r\n    }\r\n\r\n  getFilteredShelfmarks(): string {\r\n    let shelfmarks = '';\r\n    this.selectedShelfmarks.forEach(\r\n      (shelfmark) => shelfmarks = shelfmarks + shelfmark + '; '\r\n    );\r\n    shelfmarks = shelfmarks.substring(0, shelfmarks.length - 2 );\r\n    return shelfmarks;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\nimport {PrintManifestation} from '../model/PrintManifestation';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport * as appGlobals from '../app.globals';\r\nimport {ProtokollRequest} from '../model/ProtokollRequest';\r\nimport {DigitalManifestation} from '../model/DigitalManifestation';\r\nimport {PrimoResponse} from '../model/PrimoResponse';\r\nimport {PrimoData} from '../model/PrimoData';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GetterService {\r\n\r\n  printManifestations: Map<string, PrintManifestation>;\r\n\r\n  digitalManifestations: Map<string, DigitalManifestation>;\r\n\r\n  primoData: Map<string, PrimoData>;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  reset() {\r\n    this.printManifestations = new Map<string, PrintManifestation>();\r\n    this.digitalManifestations = new Map<string, DigitalManifestation>();\r\n    this.primoData = new Map<string, PrimoData>();\r\n  }\r\n\r\n  getAllDigitalManifestations(protokollRequest: ProtokollRequest): Observable<DigitalManifestation[]> {\r\n    const url = appGlobals.counterretrievalUrl + '/ebookcounter/isbns/' + protokollRequest.shelfmark.replace(' ', ';');\r\n    // const url = 'assets/data/example_digital_manifestations.json';\r\n    return this.http.get<DigitalManifestation[]>(url);\r\n  }\r\n\r\n  searchPrimoForAutorTitle(authors: string, title: string): Observable<PrimoResponse> {\r\n    return this.http.get<PrimoResponse>(appGlobals.getterUrl + '/getauthorTitle?authors=' + authors + '&title=' + title);\r\n  }\r\n\r\n  searchPrimoForShelfmark(shelfmark: string): Observable<PrimoResponse> {\r\n    return this.http.get<PrimoResponse>(appGlobals.getterUrl + '/getPrimoResponse/shelfmark/' + shelfmark);\r\n  }\r\n\r\n  getDigitalManifestation(identifier: string): Observable<DigitalManifestation> {\r\n    // const url = 'assets/data/example_ebookcounter.json';\r\n    const url = appGlobals.counterretrievalUrl + '/ebookcounter/isbn/' + identifier;\r\n    return this.http.get<DigitalManifestation>(url);\r\n  }\r\n\r\n  getDigitalManifestationByIdentifiers(isbn: string, doi: string): Observable<DigitalManifestation> {\r\n    // const url = 'assets/data/example_ebookcounter.json';\r\n    const url = appGlobals.counterretrievalUrl + '/ebookcounter/identifiers?doi=' + doi + '&isbn=' + isbn;\r\n    return this.http.get<DigitalManifestation>(url);\r\n  }\r\n\r\n  searchPrimoForIsbn(identifier: string): Observable<PrimoResponse> {\r\n    // const url = '/assets/data/example_primo_response.json';\r\n    const url = appGlobals.getterUrl + '/getPrimoResponse/isbn/' + identifier.trim();\r\n    return this.http.get<PrimoResponse>(url);\r\n  }\r\n\r\n  getPrintManifestation(identifier: string): Observable<PrintManifestation> {\r\n    const url = appGlobals.getterUrl + '/buildFullManifestation?identifier=' + identifier.trim();\r\n    // const url = 'assets/data/example_manifestation.json';\r\n    return this.http.get<PrintManifestation>(url);\r\n  }\r\n\r\n  getAllPrintManifestations(protokollRequest: ProtokollRequest): Observable<PrintManifestation[]> {\r\n    const shelfmark = protokollRequest.shelfmark.trim().replace('+',\r\n      '%2B').replace(' ', ';');\r\n    let url = appGlobals.getterUrl + '/fullManifestation?identifier=' + shelfmark.trim() + '&exact=' + protokollRequest.exact;\r\n    if (protokollRequest.getType() === 'barcode') {\r\n      url = url + '&barcode';\r\n    }\r\n    // url = 'assets/data/example.json';\r\n    return this.http.get<PrintManifestation[]>(url, {headers: new HttpHeaders({timeout: `${60000}`})});\r\n  }\r\n}\r\n","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport * as appGlobals from '../app.globals';\r\nimport {Memorylist} from '../model/Memorylist';\r\nimport {Observable} from 'rxjs';\r\nimport {MemoryListItem} from '../model/MemoryListItem';\r\nimport {Stockcontrol} from '../model/Stockcontrol';\r\nimport {Action} from '../model/Action';\r\nimport {ItemAction} from '../model/ItemAction';\r\nimport {TitleAction} from '../model/TitleAction';\r\n\r\n@Injectable()\r\nexport class MemorylistService {\r\n\r\n  public memorylists: Memorylist[] = [];\r\n\r\n  public tabindex = 0;\r\n\r\n  public memorylistItems: MemoryListItem[];\r\n\r\n  public actionTypes = ['Aussonderung', 'Umstellung'];\r\n\r\n  public actionType: string;\r\n\r\n  public collectionInd: string;\r\n\r\n  public number: number;\r\n\r\n  public activeMemorylistItem: MemoryListItem;\r\n\r\n  public savedActions: Map<String, Action>;\r\n\r\n  public stockcontrols: Stockcontrol[] = [];\r\n\r\n  public memorylistItemChanged$: EventEmitter<MemoryListItem>;\r\n\r\n  public activeMemorylist: Memorylist = new Memorylist(new Date(), new Date(), '', [], '');\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.memorylistItemChanged$ = new EventEmitter();\r\n    this.reset();\r\n  }\r\n\r\n  reset() {\r\n    this.stockcontrols = [];\r\n    this.memorylistItems = [];\r\n    this.memorylists = [];\r\n    this.savedActions = new Map<string, Action>();\r\n  }\r\n\r\n  createNewList(): Observable<Memorylist> {\r\n    const url = appGlobals.stockanalyzerUrl + '/newMemorylist';\r\n    return this.http.post<Memorylist>(url, JSON.stringify(this.activeMemorylist), {headers: appGlobals.headersJson});\r\n  }\r\n\r\n  addMemorylistItem(memorylistItem: MemoryListItem) {\r\n    this.http.post <MemoryListItem>(appGlobals.stockanalyzerUrl + '/memorylistItem',\r\n      JSON.stringify(memorylistItem),\r\n      {headers: appGlobals.headersJson}).subscribe(\r\n      data => {\r\n        this.http.put(appGlobals.stockanalyzerUrl + '/memorylistItem/' + data.id + '/memorylist',\r\n          appGlobals.stockanalyzerUrl + '/memorylist/' + this.activeMemorylist.id,\r\n          {headers: appGlobals.headersConnect}).map(\r\n          response => response['_embedded']['memeorylistItem']).subscribe(\r\n          () => this.activeMemorylistItem = data\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  updateItemAction(itemAction: ItemAction): Observable<ItemAction> {\r\n    return this.http.put<ItemAction>(appGlobals.stockanalyzerUrl + '/itemAction/' + itemAction.uuid,\r\n      JSON.stringify(itemAction), {headers: appGlobals.headersJson});\r\n  }\r\n\r\n  addItemAction(itemAction: ItemAction): boolean {\r\n    if (this.savedActions.has(itemAction.itemId)) {\r\n      return false;\r\n    } else {\r\n      this.http.post<ItemAction>(appGlobals.stockanalyzerUrl + '/itemAction',\r\n        JSON.stringify(itemAction),\r\n        {headers: appGlobals.headersJson}).subscribe(\r\n        data => {\r\n          this.http.put(appGlobals.stockanalyzerUrl + '/itemAction/' + data.uuid + '/memorylistItem',\r\n            appGlobals.stockanalyzerUrl + '/memorylistItem/' + this.activeMemorylistItem.id,\r\n            {headers: appGlobals.headersConnect}\r\n          ).subscribe(\r\n            () => {\r\n              this.activeMemorylistItem.itemActions.push(data);\r\n              this.savedActions.set(data.itemId, data);\r\n              return true;\r\n            }\r\n          );\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  removeItemAction(itemAction: ItemAction): boolean {\r\n    if (!this.savedActions.has(itemAction.itemId)) {\r\n      return false;\r\n    } else {\r\n      this.http.delete(appGlobals.stockanalyzerUrl + '/itemAction/' + itemAction.uuid).subscribe(\r\n        () => {\r\n          this.activeMemorylistItem.itemActions = this.activeMemorylistItem.itemActions.filter(\r\n            entry => entry !== itemAction\r\n          );\r\n\r\n          this.savedActions.delete(itemAction.itemId);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  addTitleAction(titleAction: TitleAction): boolean {\r\n    if (this.savedActions.has(titleAction.titleId)) {\r\n      return false;\r\n    } else {\r\n      this.http.post<TitleAction>(appGlobals.stockanalyzerUrl + '/titleAction',\r\n        JSON.stringify(titleAction),\r\n        {headers: appGlobals.headersJson}\r\n      ).subscribe(\r\n        data => {\r\n          this.http.put(appGlobals.stockanalyzerUrl + '/titleAction/' + data.uuid + '/memorylistItem',\r\n            appGlobals.stockanalyzerUrl + '/memorylistItem/' + this.activeMemorylistItem.id,\r\n            {headers: appGlobals.headersConnect}\r\n          ).subscribe(\r\n            () => {\r\n              this.activeMemorylistItem.titleActions.push(data);\r\n              this.savedActions.set(data.titleId, data);\r\n              return true;\r\n            }\r\n          );\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  removeTitleAction(titleAction: TitleAction): boolean {\r\n    const key = titleAction.actionType + '-' + titleAction.titleId;\r\n    if (!this.savedActions.has(key)) {\r\n      return false;\r\n    } else {\r\n      this.http.delete(appGlobals.stockanalyzerUrl + '/titleAction/' + titleAction.uuid).subscribe(\r\n        () => {\r\n          this.activeMemorylistItem.titleActions = this.activeMemorylistItem.titleActions.filter(\r\n            entry => entry !== titleAction\r\n          );\r\n\r\n          this.savedActions.delete(titleAction.titleId);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getItemlistsForUser(username: string): Observable<Memorylist[]> {\r\n    const url = appGlobals.stockanalyzerUrl + '/memorylist/forUser/' + username;\r\n    return this.http.get<Memorylist[]>(url);\r\n  }\r\n\r\n  getStockcontrolsForUser(username: string): Observable<Stockcontrol[]> {\r\n    const url = appGlobals.stockanalyzerUrl + '/stockcontrol/peruser/' + username;\r\n    return this.http.get<Stockcontrol[]>(url);\r\n  }\r\n\r\n  getItemlist(identifier: string) {\r\n    return this.http.get<Memorylist>(appGlobals.stockanalyzerUrl + '/memorylist/' + identifier);\r\n  }\r\n\r\n  importStockcontrol(identifier: string): Observable<Memorylist> {\r\n    return this.http.get<Memorylist>(appGlobals.stockanalyzerUrl + '/memorylist/fromStockcontrol/' + identifier);\r\n  }\r\n\r\n  getItemsForMemorylist(uuid: string): Observable<MemoryListItem[]> {\r\n    return this.http.get<MemoryListItem[]>(appGlobals.stockanalyzerUrl + '/memorylist/' + uuid + '/memorylistItems')\r\n      .map(response => response['_embedded']['memorylistItem']);\r\n  }\r\n\r\n  saveActiveMemorylist(): Observable<Memorylist> {\r\n    return this.http.post<Memorylist>(appGlobals.stockanalyzerUrl + '/memorylist/' + this.activeMemorylist.id,\r\n      JSON.stringify(this.activeMemorylist), {headers: appGlobals.headersJson});\r\n  }\r\n\r\n  selectMemorylistItem(savedItem: MemoryListItem) {\r\n    this.activeMemorylistItem = savedItem;\r\n    this.http.get<TitleAction[]>(appGlobals.stockanalyzerUrl + '/memorylistItem/' + this.activeMemorylistItem.id +\r\n      '/titleActions').map(response => response['_embedded']['titleAction']).subscribe(\r\n      data => {\r\n        this.activeMemorylistItem.titleActions = data;\r\n        data.forEach(entry => this.savedActions.set(entry.titleId, entry));\r\n      }\r\n    );\r\n    this.http.get<ItemAction[]>(appGlobals.stockanalyzerUrl + '/memorylistItem/' + this.activeMemorylistItem.id +\r\n      '/itemActions').map(response => response['_embedded']['itemAction']).subscribe(\r\n      data => {\r\n        this.activeMemorylistItem.itemActions = data;\r\n        data.forEach(\r\n          entry => this.savedActions.set(entry.itemId, entry));\r\n      }\r\n    );\r\n    this.memorylistItemChanged$.emit(savedItem);\r\n  }\r\n\r\n  nextMemorylistItem() {\r\n    this.tabindex++;\r\n    this.selectMemorylistItem(this.memorylistItems[this.tabindex]);\r\n  }\r\n\r\n  previousMemorylistItem() {\r\n    this.tabindex--;\r\n    this.selectMemorylistItem(this.memorylistItems[this.tabindex]);\r\n  }\r\n}\r\n","module.exports = \"\\r\\n  <p-slideMenu #menu [model]=\\\"mainMenu\\\" [popup]=\\\"true\\\"></p-slideMenu>\\r\\n  <span class=\\\"navbar-text\\\">\\r\\n  <button #btn type=\\\"button\\\" pButton icon=\\\"pi pi-bars\\\" label=\\\"{{authenticationService.principal.fullname}}\\\"\\r\\n          (click)=\\\"menu.toggle($event)\\\"></button>\\r\\n  </span>\\r\\n<p-dialog [(visible)]=\\\"show['newList']\\\">\\r\\n  <p-header>\\r\\n    {{'new.memorylist' | translate}}\\r\\n  </p-header>\\r\\n  <input type=\\\"text\\\" size=\\\"60\\\" pInputText [(ngModel)]=\\\"itemlistsService.activeMemorylist.name\\\"/>\\r\\n  <textarea [rows]=\\\"5\\\" [cols]=\\\"60\\\" type=\\\"text\\\" pInputText\\r\\n            [(ngModel)]=\\\"itemlistsService.activeMemorylist.description\\\"></textarea>\\r\\n  <p-footer>\\r\\n    <button pButton type=\\\"button\\\" label=\\\"{{'save' | translate}}\\\" (click)=\\\"saveNewList()\\\"></button>\\r\\n    <button pButton type=\\\"button\\\" label=\\\"{{'cancel' | translate}}\\\" (click)=\\\"show['newList'] = false;\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n\\r\\n<p-dialog [(visible)]=\\\"show['stockcontrolImport']\\\">\\r\\n  <p-header>\\r\\n    <p-dropdown [options]=\\\"itemlistsService.stockcontrols\\\" optionLabel=\\\"description\\\"\\r\\n                [(ngModel)]=\\\"stockcontrol\\\"></p-dropdown>\\r\\n  </p-header>\\r\\n  <p-footer>\\r\\n    <button pButton type=\\\"button\\\" label=\\\"Import\\\"\\r\\n            (click)=\\\"loadItemlistFromStockcontrol(stockcontrol.identifier)\\\"></button>\\r\\n    <button pButton type=\\\"button\\\" label=\\\"{{'cancel' | translate}}\\\" (click)=\\\"show['stockcontrolImport'] = false;\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n\\r\\n<p-dialog [(visible)]=\\\"show['deletionSettings']\\\">\\r\\n  <p-header>\\r\\n    {{'task' | translate}}\\r\\n  </p-header>\\r\\n  <p-footer>\\r\\n    <p-dropdown [options]=\\\"itemlistsService.actionTypes\\\"\\r\\n                [(ngModel)]=\\\"itemlistsService.actionType\\\"></p-dropdown>\\r\\n    <p-dropdown [options]=\\\"filterService.uniqueCollections\\\"\\r\\n                [(ngModel)]=\\\"itemlistsService.collectionInd\\\"></p-dropdown>\\r\\n    <p-spinner [(ngModel)]=\\\"itemlistsService.number\\\" [min]=\\\"0\\\"></p-spinner>\\r\\n    <button pButton type=\\\"button\\\" label=\\\"Import\\\"\\r\\n            (click)=\\\"addAction()\\\"></button>\\r\\n    <button pButton type=\\\"button\\\" label=\\\"{{'cancel' | translate}}\\\" (click)=\\\"show['deletionSettings'] = false;\\\"></button>\\r\\n  </p-footer>\\r\\n</p-dialog>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {MemorylistService} from './service/memorylist.service';\r\nimport {AuthenticationService} from './service/authentication.service';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {Memorylist} from './model/Memorylist';\r\nimport {Stockcontrol} from './model/Stockcontrol';\r\nimport {FilterService} from './service/filter.service';\r\nimport {GetterService} from './service/getter.service';\r\n\r\n@Component({\r\n  selector: 'app-stockmanagement',\r\n  templateUrl: 'stockmanagement.component.html'\r\n})\r\n\r\nexport class StockmanagementComponent implements OnInit {\r\n\r\n  public show = {};\r\n\r\n  mainMenu: MenuItem[];\r\n\r\n  public stockcontrol: Stockcontrol;\r\n\r\n  public itemlistMenu: MenuItem[] = [\r\n    {\r\n      label: 'new List',\r\n      icon: 'pi pi-fw pi-plus',\r\n      command: event => this.createNewList()\r\n    }\r\n  ];\r\n\r\n  constructor(public itemlistsService: MemorylistService,\r\n              public authenticationService: AuthenticationService,\r\n              public filterService: FilterService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.show['newList'] = false;\r\n    this.show['uploadForm'] = false;\r\n    this.show['importStockcontrol'] = false;\r\n    if (this.authenticationService.principal) {\r\n      if (this.authenticationService.principal.roles.indexOf('ROLE_FACHREFERENT') > -1) {\r\n        this.getItemlists();\r\n      }\r\n    }\r\n    this.mainMenu = [\r\n      {\r\n        label: 'Listen',\r\n        items: this.itemlistMenu\r\n      },\r\n      {\r\n        label: 'Profil-Import',\r\n        command: event => this.getStockcontrols()\r\n      },\r\n      {\r\n        label: 'csv-Import',\r\n        command: event => this.show['uploadForm'] = true\r\n      },\r\n      {\r\n        label: 'ELi:SA-Daten ändern',\r\n        command: event => window.location.href = '/fachref/user'\r\n      },\r\n      {\r\n        label: 'Listen verwalten',\r\n        command: event => window.location.href = '/fachref/lists'\r\n      },\r\n      {\r\n        label: 'Aufgaben abschicken',\r\n        command: event => window.location.href = '/fachref/lists/' + this.itemlistsService.activeMemorylist.id\r\n      },\r\n      {\r\n        label: 'Logout',\r\n        command: event => this.authenticationService.logout()\r\n      }\r\n    ];\r\n  }\r\n\r\n  getItemlists() {\r\n    this.itemlistsService.getItemlistsForUser(this.authenticationService.principal.name).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.itemlistsService.memorylists = data;\r\n        data.forEach(entry => this.itemlistMenu.push({\r\n          id: entry.id,\r\n          label: entry.name,\r\n          command: event => {\r\n            this.loadItemlist(entry.id);\r\n          }\r\n        }));\r\n      }\r\n    );\r\n  }\r\n\r\n  getStockcontrols() {\r\n    this.itemlistsService.getStockcontrolsForUser(this.authenticationService.principal.name).subscribe(\r\n      data => {\r\n        this.itemlistsService.stockcontrols = data;\r\n        this.show['stockcontrolImport'] = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  loadItemlistFromStockcontrol(identifier: string) {\r\n    this.itemlistsService.importStockcontrol(identifier).subscribe(\r\n      data => {\r\n        this.itemlistsService.activeMemorylist = data;\r\n        this.show['stockcontrolImport'] = false;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  loadItemlist(identifier: string) {\r\n    this.itemlistsService.getItemlist(identifier).subscribe(\r\n      data => {\r\n        this.itemlistsService.activeMemorylist = data;\r\n        this.itemlistsService.getItemsForMemorylist(data.id).subscribe(\r\n          savedItems => {\r\n            this.itemlistsService.memorylistItems = savedItems;\r\n            this.itemlistsService.selectMemorylistItem(savedItems[0]);\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  createNewList() {\r\n    this.itemlistsService.activeMemorylist = new Memorylist(new Date(), new Date(), 'neue Liste', [], 'Beschreibung');\r\n    this.show['newList'] = true;\r\n  }\r\n\r\n  saveNewList() {\r\n    this.itemlistsService.createNewList().subscribe(\r\n      data => {\r\n        this.itemlistsService.activeMemorylist = data;\r\n        this.itemlistsService.memorylists.push(data);\r\n        this.show['newList'] = false;\r\n        this.itemlistMenu.push({\r\n          id: data.id,\r\n          label: data.description,\r\n          command: event => {\r\n            this.loadItemlist(data.id);\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  addAction() {\r\n  }\r\n}\r\n","export * from './translate.service';\r\nexport * from './translation';\r\nexport * from './translate.pipe';\r\n","export const LANG_DE_NAME = 'de';\r\n\r\nexport const LANG_DE_TRANS = {\r\n  'year': 'Jahr',\r\n  'month': 'Monat',\r\n  'usergroups': 'Nutzergruppen',\r\n  'overview': 'Überblick',\r\n  'show.filter': 'Filter anzeigen',\r\n  'hide.filter': 'Filter ausblenden',\r\n  'shelfmark': 'Signatur oder Barcode',\r\n  'collection': 'Standort',\r\n  'number.loans': 'Anzahl Ausleihen',\r\n  'submit': 'Abfrage starten',\r\n  'collecting.data': 'Datenw erden abgerufen',\r\n  'tooltip.shelfmark': 'Bitte Signatur eingeben',\r\n  'tab.overview': 'Überblick',\r\n  'tab.bibliography': 'Titeldaten',\r\n  'tab.information': 'Zahlen',\r\n  'tab.itemlist': 'Exemplare',\r\n  'tab.usage': 'Nutzung',\r\n  'tab.eventlist': 'Ereignisse',\r\n  'tab.statistics': 'Daten',\r\n  'tab.analysis': 'Analyse',\r\n  'title.protocol': 'Ausleihprotokoll',\r\n  'description.protocol.short': 'Alle Details zu einem Titel',\r\n  'description.analysis.short': 'In dieser Tabelle werden die ungenutzten Exemplare in den zurückliegenden X Jahren dargestellt.',\r\n  'title.overview': 'Überblick',\r\n  'title.bibliography': 'Bibliographische Angaben',\r\n  'title.statistics': 'Zahlen',\r\n  'title.itemlist': 'Exemplarübersicht',\r\n  'title.eventlist': 'Ereignisübersicht',\r\n  'title.analysis': 'Analyse',\r\n  'title.usage': 'Nutzung',\r\n  'editions': 'Auflagen',\r\n  'materials': 'Materialien',\r\n  'collections': 'Standorte',\r\n  'subLibraries': 'Zweigbibliothek',\r\n  'material.BOOK': 'Bücher',\r\n  'material.CDROM': 'CD-ROM',\r\n  'material.': 'unbekannt',\r\n  'material.???': 'unbekannt',\r\n  'subLibrary.E0001': 'Campus Essen',\r\n  'subLibrary.D0001': 'Campus Duisburg',\r\n  'subLibrary.E0023': 'FachBibl Medizin',\r\n  'subLibrary.???': 'unbekannt',\r\n  'series.loans': 'Ausleihen',\r\n  'series.requests': 'Vormerkungen',\r\n  'series.stock': 'Bestand',\r\n  'series.cald': 'CaLD',\r\n  'event.type.loan': 'Ausleihe',\r\n  'event.type.return': 'Rückgabe',\r\n  'event.type.request': 'Vormerkung',\r\n  'event.type.hold': 'Abholung',\r\n  'event.type.inventory': 'Inventarisierung',\r\n  'event.type.deletion': 'Aussonderung',\r\n  'event.type.cald': 'CaLD',\r\n  'event.type.caldDelivery': 'CaLD Ankunft',\r\n  'series.01': 'Studierende',\r\n  'series.05': 'Promovierende + Habilitierende',\r\n  'series.18': 'ExamenskandidatInnen',\r\n  'series.21': 'Angehörige anderer HS',\r\n  'series.23': 'HS-Angehörige (UA Ruhr)',\r\n  'series.06': 'Hochschulangehörige UDE',\r\n  'series.03': 'HS-Angehörige (Sonderkond.) UDE',\r\n  'series.24': 'Studierende, schwerbehindert',\r\n  'series.22': 'Externe BenutzerInnen',\r\n  'series.20': 'SchülerInnen (DJ/EJ bis 18 Jahre, sonst DE/EE)',\r\n  'series.07': 'Handapparat',\r\n  'series.08': 'Handapparat, gemeinsamer',\r\n  'series.04': 'Handapparat, 15 Ausleihen',\r\n  'series.09': 'Projekt',\r\n  'series.10': 'Semesterapparat',\r\n  'series.12': 'Bibliotheksverw. / Dienstgebrauch',\r\n  'series.13': 'Neuerw. / 14 Tage',\r\n  'series.16': 'Fernleihe, national',\r\n  'series.17': 'Fernleihe, international',\r\n  'series.50': 'Neuanmeldungen - gesperrt',\r\n  'series.02': 'Inaktive - zur Löschung vorgesehen',\r\n  'series.25': 'Exmatrikulierte - noch aktiv',\r\n  'event.borrowerStatus.01': 'Studierende',\r\n  'event.borrowerStatus.05': 'Promovierende + Habilitierende',\r\n  'event.borrowerStatus.18': 'ExamenskandidatInnen',\r\n  'event.borrowerStatus.21': 'Angehörige anderer HS',\r\n  'event.borrowerStatus.23': 'HS-Angehörige (UA Ruhr)',\r\n  'event.borrowerStatus.06': 'Hochschulangehörige UDE',\r\n  'event.borrowerStatus.03': 'HS-Angehörige (Sonderkond.) UDE',\r\n  'event.borrowerStatus.24': 'Studierende, schwerbehindert',\r\n  'event.borrowerStatus.22': 'Externe BenutzerInnen',\r\n  'event.borrowerStatus.20': 'SchülerInnen (DJ/EJ bis 18 Jahre, sonst DE/EE)',\r\n  'event.borrowerStatus.07': 'Handapparat',\r\n  'event.borrowerStatus.08': 'Handapparat, gemeinsamer',\r\n  'event.borrowerStatus.04': 'Handapparat, 15 Ausleihen',\r\n  'event.borrowerStatus.09': 'Projekt',\r\n  'event.borrowerStatus.10': 'Semesterapparat',\r\n  'event.borrowerStatus.12': 'Bibliotheksverw. / Dienstgebrauch',\r\n  'event.borrowerStatus.13': 'Neuerw. / 14 Tage',\r\n  'event.borrowerStatus.16': 'Fernleihe, national',\r\n  'event.borrowerStatus.17': 'Fernleihe, international',\r\n  'event.borrowerStatus.50': 'Neuanmeldungen - gesperrt',\r\n  'event.borrowerStatus.02': 'Inaktive - zur Löschung vorgesehen',\r\n  'event.borrowerStatus.25': 'Exmatrikulierte - noch aktiv',\r\n  'event.borrowerStatus.': 'unbekannt',\r\n  'event.borrowerStatus.???': 'unbekannt',\r\n  'item.process.status.IU': ', in der internen Umarbeitung',\r\n  'item.process.status.IG': ', nicht am Standort',\r\n  'item.process.status.GG': ', in Bearbeitung',\r\n  'item.process.status.NE': ', Neuerwerbungen',\r\n  'item.process.status.BD': ', beim Buchbinder',\r\n  'item.process.status.ZS': ', Zsn-Katalogisierung',\r\n  'item.process.status.WE': ', Werkstatt',\r\n  'item.process.status.MS': ', vermisst',\r\n  'item.process.status.BW': ', wird bestellt',\r\n  'item.process.status.BS': ', bestellt',\r\n  'item.process.status.BP': ', Zsn.-Heft erwartet',\r\n  'item.process.status.NP': ', erscheint nicht',\r\n  'item.process.status.VG': ', vergriffen',\r\n  'item.process.status.ST': ', storniert',\r\n  'item.process.status.SU': ', Semesterapparat',\r\n  'item.process.status.UU': ', Präsenzapparat IBW Raum BB',\r\n  'item.process.status.FS': ', Fortsetzungen',\r\n  'item.process.status.TA': ', Themenaktion',\r\n  'item.process.status.WP': ', Bestellwunsch / Benutzer',\r\n  'item.process.status.IL': ', Fernleihmaterial',\r\n  'item.process.status.RK': ', reklamiert',\r\n  'item.process.status.NV': ', nicht am Standort',\r\n  'item.process.status.': ' ',\r\n  'item.process.status.???': ' ',\r\n  'item.status.xx': 'ausgesodnert',\r\n  'item.status': 'Status',\r\n  'item.status.': 'unbekannt',\r\n  'item.status.undefined': 'unbekannt',\r\n  'item.status.???': 'unbekannt',\r\n  'item.status.10': 'Ausleihbestand',\r\n  'item.status.11': '',\r\n  'item.status.12': 'Magazinausleihe',\r\n  'item.status.30': 'Zeitschriftenbände',\r\n  'item.status.31': 'Zeitschriftenband, Magazin',\r\n  'item.status.38': 'Zeitschriften-Stücktitel, Päsenz',\r\n  'item.status.39': 'Zeitschriften-Heft',\r\n  'item.status.42': 'Dienstgebrauch',\r\n  'item.status.43': 'Projekt, Staffelexemplar',\r\n  'item.status.44': 'Projekt',\r\n  'item.status.45': 'Handapparat',\r\n  'item.status.46': 'Externer Bestand',\r\n  'item.status.50': 'Rara',\r\n  'item.status.51': 'Magazin Präsenz',\r\n  'item.status.52': 'Präsenz, Keine Kurzausleihe',\r\n  'item.status.53': 'Präsenzbestand',\r\n  'item.status.54': 'bestellbar, Lesegerät erforderlich',\r\n  'item.status.55': 'In den Lesesaal bestellbar',\r\n  'item.status.85': 'Verlust Staffelexemplar',\r\n  'item.status.86': 'Verbrauchsmaterial',\r\n  'item.status.87': 'Mahnfall, Staffelexemplar',\r\n  'item.status.89': 'ausgesondert',\r\n  'item.status.90': 'ausgesondert',\r\n  'item.status.92': 'Interne Titelaufnahme',\r\n  'item.status.93': 'Projekt, Einzelexemplar',\r\n  'item.status.95': 'Verlust, Einzelexemplar',\r\n  'item.status.96': 'Projekt, Einzelexemplar',\r\n  'item.status.97': 'Mahnfall, Einzelexemplar',\r\n  'item.status.kA': 'keine Angabe',\r\n  'item.status.sE': 'siehe Einzelbände',\r\n  'statistics.numberLoans': 'Anzahl Ausleihen',\r\n  'statistics.numberRequests': 'Anzahl Vormerkungen',\r\n  'statistics.numberCald': 'Anzahl CALD',\r\n  'statistics.averageLoan': 'Mittlere Ausleihe',\r\n  'series.': 'andere',\r\n  'series.???': 'unbekannt',\r\n  'usage.totalRequests': 'Nutzung',\r\n  'message.nothingFound': 'Leider konnten keine Auflagen gefunden werden. Bitte eine gültige Signatur eingeben.',\r\n  'message.error': 'Es ist ein Fehler aufgetreten. Die Daten konnten nicht abgerufen werden.',\r\n  'message,noUsage': 'Es wurden keine Nutzungsdaten gefunden.',\r\n  'message.noConnection': 'Es konnte keine Verbindung zur Nutzungsddatenbank hergestellt werden.',\r\n  'cancel': 'Abbrechen',\r\n  'action': 'Anweisung',\r\n  'task': 'Aufgabe',\r\n  'new.memorylist': 'Neue Merkliste',\r\n  'save': 'Speichern',\r\n  'collection.from': 'woher?',\r\n  'collection.to': 'wohin?',\r\n  'number': 'Anzahl',\r\n  'ok': 'OK',\r\n  'select.years.for.analysis': 'Bitte einen Zeitraum für die Analyse auswählen.',\r\n};\r\n","export const LANG_EN_NAME = 'en';\r\n\r\nexport const LANG_EN_TRANS = {\r\n  'subject_75': 'Biology',\r\n  'status_deleted': 'weed',\r\n  'status_ignored': 'ignore',\r\n  'status_reposiotry': 'relocate'\r\n};\r\n","/*\r\n* https://scotch.io/tutorials/simple-language-translation-in-angular-2-part-1\r\n* https://stackoverflow.com/questions/39007130/the-pipe-could-not-be-found-angular2-custom-pipe\r\n*/\r\n\r\nimport {NgModule} from \"@angular/core\";\r\nimport {TranslatePipe} from \"./translate.pipe\";\r\nimport {TranslateService} from \"./translate.service\";\r\nimport {TRANSLATION_PROVIDERS} from \"./translation\";\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [TranslatePipe],\r\n  exports: [TranslatePipe],\r\n  providers: [TranslateService, TRANSLATION_PROVIDERS]\r\n})\r\nexport class TranslateModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {TranslateService} from './translate.service';\r\n\r\n@Pipe({\r\n  name: 'translate',\r\n})\r\n\r\nexport class TranslatePipe implements PipeTransform {\r\n\r\n  constructor(private translate: TranslateService) { }\r\n\r\n  transform(value: string, lang?: string): any {\r\n    if (!value) {return; }\r\n    if (lang) {\r\n      this.translate.use(lang);\r\n    }\r\n    return this.translate.instant(value);\r\n  }\r\n}\r\n","import {Injectable, Inject} from '@angular/core';\r\nimport {TRANSLATIONS} from './translation';\r\n\r\n@Injectable()\r\nexport class TranslateService {\r\n  private _currentLang = 'de';\r\n\r\n  public get currentLang() {\r\n    return this._currentLang;\r\n  }\r\n\r\n  constructor(@Inject(TRANSLATIONS) private _translations: any) {\r\n  }\r\n\r\n  public use(lang: string): void {\r\n    this._currentLang = lang;\r\n  }\r\n\r\n  private translate(key: string): string {\r\n    const translation = key;\r\n\r\n    if (this._translations[this.currentLang] && this._translations[this.currentLang][key]) {\r\n      return this._translations[this.currentLang][key];\r\n    }\r\n\r\n    return translation;\r\n  }\r\n\r\n  public instant(key: string) {\r\n    return this.translate(key);\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\n// import translations\r\nimport { LANG_DE_NAME, LANG_DE_TRANS } from './lang-de';\r\nimport { LANG_EN_NAME, LANG_EN_TRANS } from './lang-en';\r\n\r\n// translation token\r\nexport const TRANSLATIONS = new InjectionToken<string>('translations');\r\n\r\n// all translations\r\nexport const dictionary = {\r\n  [LANG_DE_NAME]: LANG_DE_TRANS,\r\n  [LANG_EN_NAME]: LANG_DE_TRANS\r\n};\r\n\r\n// providers\r\nexport const TRANSLATION_PROVIDERS = [\r\n  { provide: TRANSLATIONS, useValue: dictionary },\r\n];\r\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}