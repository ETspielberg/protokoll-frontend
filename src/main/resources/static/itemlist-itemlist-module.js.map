{"version":3,"sources":["webpack:///./src/app/itemlist/itemlist.component.html","webpack:///./src/app/itemlist/itemlist.component.ts","webpack:///./src/app/itemlist/itemlist.module.ts","webpack:///./src/app/itemlist/itemlist.routing.ts","webpack:///./src/app/model/ItemAction.ts"],"names":[],"mappings":"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","file":"itemlist-itemlist-module.js","sourcesContent":["module.exports = \"<h2>{{'title.itemlist' | translate}}</h2>\\r\\n<p-dialog [baseZIndex]=\\\"0\\\" *ngIf=\\\"itemlistService.activeMemorylistItem.itemActions\\\" [(visible)]=\\\"show['moveDialog']\\\">\\r\\n  <p-header>\\r\\n    Exemplare Ã¤ndern?\\r\\n  </p-header>\\r\\n  <p-table [value]=\\\"itemlistService.activeMemorylistItem.itemActions\\\" (onEditComplete)=\\\"updateItemAction($event.data)\\\">\\r\\n    <ng-template pTemplate=\\\"header\\\">\\r\\n      <tr>\\r\\n        <th>Aktion</th>\\r\\n        <th>woher?</th>\\r\\n        <th>wohin?</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"body\\\" let-action>\\r\\n      <tr>\\r\\n        <td>{{action.actionType}}</td>\\r\\n        <td>{{action.collectionFrom}}</td>\\r\\n        <td [pEditableColumn]=\\\"action\\\" [pEditableColumnField]=\\\"'collectionTo'\\\">\\r\\n          <p-cellEditor >\\r\\n            <ng-template pTemplate=\\\"input\\\">\\r\\n              <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"action.collectionTo\\\">\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"output\\\">\\r\\n              {{action.collectionTo}}\\r\\n            </ng-template>\\r\\n          </p-cellEditor>\\r\\n        </td>\\r\\n        <td><button pButton type=\\\"button\\\" (click)=\\\"itemlistService.removeItemAction(action)\\\"></button></td>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n  </p-table>\\r\\n<p-footer>\\r\\n  <button style=\\\"float: left;\\\" class=\\\"ui-button-success\\\" type=\\\"button\\\" pButton (click)=\\\"show['moveDialog'] = false\\\"\\r\\n          label=\\\"OK\\\" icon=\\\"pi pi-table\\\" [disabled]=\\\"selectedItems.length == 0\\\"></button>\\r\\n</p-footer>\\r\\n</p-dialog>\\r\\n<p-table #dt [value]=\\\"filterService.selectedItems\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\"\\r\\n         [rowsPerPageOptions]=\\\"[10,20,50]\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedItems\\\">\\r\\n  <ng-template pTemplate=\\\"caption\\\">\\r\\n    <div class=\\\"ui-helper-clearfix\\\">\\r\\n      <button style=\\\"float: left;\\\" class=\\\"ui-button-success\\\" type=\\\"button\\\" pButton (click)=\\\"dt.exportCSV()\\\"\\r\\n              label=\\\"Export\\\" icon=\\\"pi pi-table\\\"></button>\\r\\n      <button style=\\\"float: left;\\\" class=\\\"ui-button-success\\\" type=\\\"button\\\" pButton (click)=\\\"clearSelection()\\\"\\r\\n              label=\\\"Auswahl aufheben\\\" icon=\\\"pi pi-table\\\" [disabled]=\\\"selectedItems.length == 0\\\"></button>\\r\\n      <button style=\\\"float: left;\\\" class=\\\"ui-button-success\\\" type=\\\"button\\\" pButton (click)=\\\"deleteItems()\\\"\\r\\n              label=\\\"Aussondern\\\" icon=\\\"pi pi-table\\\" [disabled]=\\\"selectedItems.length == 0\\\"></button>\\r\\n      <button style=\\\"float: left;\\\" class=\\\"ui-button-success\\\" type=\\\"button\\\" pButton (click)=\\\"moveItems()\\\"\\r\\n              label=\\\"Umstellen\\\" icon=\\\"pi pi-table\\\" [disabled]=\\\"selectedItems.length == 0\\\"></button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n    <tr>\\r\\n      <th>\\r\\n        {{'collection' | translate}}\\r\\n      </th>\\r\\n      <th>\\r\\n        {{'shelfmark' | translate}}\\r\\n      </th>\\r\\n      <th>\\r\\n        {{'materials' | translate}}\\r\\n      </th>\\r\\n      <th>\\r\\n        {{'number.loans' | translate}}\\r\\n      </th>\\r\\n      <th>\\r\\n        {{'item.status' | translate}}\\r\\n      </th>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"body\\\" let-item>\\r\\n    <tr [pSelectableRow]=\\\"item\\\">\\r\\n      <td>\\r\\n        {{item.collection}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{item.shelfmark}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{item.material}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{item.events.length}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{'item.status.' + item.itemStatus | translate}} {{'item.process.status.' + item.processStatus |\\r\\n        translate}} {{item.noteOpac}}\\r\\n      </td>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n</p-table>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Item} from '../model/Item';\r\nimport {FilterService} from '../service/filter.service';\r\nimport {MemorylistService} from '../service/memorylist.service';\r\nimport {MemoryListItem} from '../model/MemoryListItem';\r\nimport {ItemAction} from '../model/ItemAction';\r\n\r\n@Component({\r\n  selector: 'app-itemlist',\r\n  templateUrl: 'itemlist.component.html'\r\n})\r\nexport class ItemlistComponent implements OnInit {\r\n\r\n  private selectedItems: Item[];\r\n\r\n  public show = {};\r\n\r\n  constructor(public itemlistService: MemorylistService,\r\n              public filterService: FilterService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.show['moveDialog'] = false;\r\n    this.selectedItems = [];\r\n  }\r\n\r\n  clearSelection() {\r\n    this.selectedItems = [];\r\n  }\r\n\r\n  deleteItems() {\r\n    if (!this.itemlistService.activeMemorylistItem) {\r\n      this.itemlistService.activeMemorylistItem = new MemoryListItem('', '', '', 'manually selected', new Date(), new Date(), [], []);\r\n    }\r\n    if (!this.itemlistService.activeMemorylistItem.itemActions) {\r\n      this.itemlistService.activeMemorylistItem.itemActions = [];\r\n    }\r\n    this.selectedItems.forEach(\r\n      item => {\r\n        if (!this.itemlistService.savedActions.has(item.itemId)) {\r\n          const action = new ItemAction('deletion', item.collection, 'basar', 1, new Date(), item.shelfmark, item.itemId);\r\n          this.itemlistService.addItemAction(action);\r\n        }\r\n      }\r\n    );\r\n    this.show['moveDialog'] = true;\r\n  }\r\n\r\n  updateItemAction(itemAction: ItemAction) {\r\n    this.itemlistService.updateItemAction(itemAction).subscribe(() => console.log('item saved.'));\r\n  }\r\n\r\n  confirmDeletion() {\r\n    this.itemlistService.saveActiveMemorylist().subscribe(\r\n      data => this.itemlistService.activeMemorylist = data\r\n    );\r\n    this.show['moveDialog'] = false;\r\n  }\r\n\r\n  moveItems() {\r\n    if (!this.itemlistService.activeMemorylistItem) {\r\n      this.itemlistService.activeMemorylistItem = new MemoryListItem('', '', '', 'manually selected', new Date(), new Date(), [], []);\r\n    }\r\n    if (!this.itemlistService.activeMemorylistItem.itemActions) {\r\n      this.itemlistService.activeMemorylistItem.itemActions = [];\r\n    }\r\n    this.selectedItems.forEach(\r\n      item => {\r\n        const action = new ItemAction('move', item.collection, item.collection.substring(0, 2), 1, new Date(), item.shelfmark, item.itemId);\r\n        this.itemlistService.addItemAction(action);\r\n      }\r\n    );\r\n    this.show['moveDialog'] = true;\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {TranslateModule} from '../translate/translate.module';\r\nimport {ItemlistComponent} from './itemlist.component';\r\nimport {itemlistRouting} from './itemlist.routing';\r\nimport {TableModule} from 'primeng/table';\r\nimport {ButtonModule, DialogModule, InputTextModule} from 'primeng/primeng';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [CommonModule,\r\n    TranslateModule,\r\n    TableModule,\r\n    ButtonModule,\r\n    DialogModule,\r\n    InputTextModule,\r\n    FormsModule,\r\n    itemlistRouting],\r\n  declarations: [ItemlistComponent],\r\n  exports: [ItemlistComponent],\r\n  providers: []\r\n})\r\nexport class ItemlistModule {\r\n}\r\n","import {RouterModule, Routes} from '@angular/router';\r\nimport {ModuleWithProviders} from '@angular/core';\r\nimport {ItemlistComponent} from './itemlist.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: ItemlistComponent}\r\n];\r\nexport const itemlistRouting: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import {Action} from './Action';\r\n\r\nexport class ItemAction extends Action {\r\n  constructor(\r\n    public actionType: string,\r\n    public collectionFrom: string,\r\n    public collectionTo: string,\r\n    public number: number,\r\n    public created: Date,\r\n    public shelfmark: string,\r\n    public itemId: string,\r\n    public uuid?: string,\r\n  ) {\r\n    super(actionType, collectionFrom, collectionTo, number, created);\r\n  }\r\n}\r\n"],"sourceRoot":""}