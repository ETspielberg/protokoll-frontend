{"version":3,"sources":["webpack:///./src/app/model/Statistics.ts","webpack:///./src/app/statistics/statistics.component.html","webpack:///./src/app/statistics/statistics.component.ts","webpack:///./src/app/statistics/statistics.module.ts","webpack:///./src/app/statistics/statistics.routing.ts"],"names":[],"mappings":"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","file":"statistics-statistics-module.js","sourcesContent":["export class Statistics {\r\n\r\n  constructor(public year: number,\r\n              public daysStock: number,\r\n              public daysLoaned: number,\r\n              public daysRequested: number,\r\n              public numberLoans: number,\r\n              public numberRequests: number,\r\n              public numberCald: number) {\r\n  }\r\n}\r\n","module.exports = \"<h2>{{'title.statistics' | translate}}</h2>\\r\\n<p-table #dstat [value]=\\\"statisticsList\\\" [rows]=\\\"10\\\"\\r\\n              [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,50]\\\" sortField=\\\"year\\\" [sortOrder]=\\\"-1\\\">\\r\\n  <ng-template pTemplate=\\\"caption\\\">\\r\\n    <div class=\\\"ui-helper-clearfix\\\">\\r\\n      <button type=\\\"button\\\" pButton icon=\\\"pi pi-table\\\" iconPos=\\\"left\\\" label=\\\"Export\\\" (click)=\\\"dstat.exportCSV()\\\" style=\\\"float:left\\\"></button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template pTemplate=\\\"header\\\">\\r\\n    <tr>\\r\\n      <th>{{'year' | translate}}</th>\\r\\n      <th>{{'statistics.averageLoan' | translate}}</th>\\r\\n      <th>{{'statistics.numberRequests' | translate}}</th>\\r\\n      <th>{{'statistics.numberLoans' | translate}}</th>\\r\\n      <th>{{'statistics.numberCald' | translate}}</th>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n  <ng-template pTemplate=\\\"body\\\" let-statistic>\\r\\n    <tr>\\r\\n      <td>{{statistic.year}}</td>\\r\\n      <td>{{(statistic.daysLoaned / statistic.daysStock) | percent:'1.0-1'}}</td>\\r\\n      <td>{{statistic.numberRequests}}</td>\\r\\n      <td>{{statistic.numberLoans}}</td>\\r\\n      <td>{{statistic.numberCald}}</td>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n</p-table>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Statistics} from '../model/Statistics';\r\nimport {DataService} from '../service/data.service';\r\n\r\n@Component({\r\n  selector: 'app-statistics',\r\n  templateUrl: 'statistics.component.html'\r\n})\r\nexport class StatisticsComponent implements OnInit {\r\n\r\n  private statistics: Map<number, Statistics>;\r\n\r\n  public statisticsList: Statistics[];\r\n\r\n\r\n  constructor(private dataService: DataService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataService.dataChanged$.subscribe(changed => this.reset());\r\n    this.reset();\r\n  }\r\n\r\n  reset() {\r\n    this.statistics = new Map<number, Statistics>();\r\n    this.statisticsList = [];\r\n    const stocks = this.dataService.printData.get('stock');\r\n    if (typeof stocks !== 'undefined') {\r\n      const requests = this.dataService.printData.get('requests');\r\n      const oldDate = new Date(stocks[0][0]);\r\n      let year;\r\n      if (typeof requests !== 'undefined') {\r\n        const oldRequestsDate = new Date(requests[0][0]);\r\n        year = Math.min(oldDate.getFullYear(), oldRequestsDate.getFullYear());\r\n      } else {\r\n        year = Math.min(oldDate.getFullYear());\r\n      }\r\n      const actualYear = new Date().getFullYear();\r\n      while (year <= actualYear) {\r\n        this.statistics.set(year, new Statistics(year, 0, 0, 0, 0, 0, 0));\r\n        year++;\r\n      }\r\n      this.calculateStatistics();\r\n    }\r\n  }\r\n\r\n  public calculateStatistics(): void {\r\n    const actualYear = new Date().getFullYear();\r\n    this.fillAnalysisFields(this.dataService.printData, 'loans', actualYear);\r\n    this.fillAnalysisFields(this.dataService.printData, 'cald', actualYear);\r\n    this.fillAnalysisFields(this.dataService.printData, 'stock', actualYear);\r\n    this.fillAnalysisFields(this.dataService.printData, 'requests', actualYear);\r\n    this.statistics.forEach(\r\n      entry => this.statisticsList.push(entry)\r\n    );\r\n  }\r\n\r\n  private fillAnalysisFields(plotData: Map<string, number[][]>, type: string, actualYear: number) {\r\n    const series = plotData.get(type);\r\n    if (series === undefined) {\r\n      return;\r\n    } else if (series.length === 0) {\r\n      return;\r\n    }\r\n    let oldDatapoint = series[0];\r\n    let amount;\r\n    for (let i = 0; i < series.length; i++) {\r\n      let stat;\r\n      const startDate = new Date(oldDatapoint[0]);\r\n      let year = startDate.getFullYear();\r\n      let finalEndDate;\r\n      if (i === series.length - 1) {\r\n        finalEndDate = new Date();\r\n      } else {\r\n        finalEndDate = new Date(series[i][0]);\r\n      }\r\n      actualYear = finalEndDate.getFullYear();\r\n      while (year < actualYear) {\r\n        const endDate = new Date().setFullYear(year, 12, 31);\r\n        stat = this.statistics.get(year);\r\n        amount = (endDate.valueOf() - startDate.valueOf()) * oldDatapoint[1] / (1000 * 3600 * 24);\r\n        if (type === 'stock') {\r\n          stat.daysStock += amount;\r\n        } else if (type === 'requests') {\r\n          stat.daysRequested += amount;\r\n        } else if (type === 'loans') {\r\n          stat.daysLoaned += amount;\r\n        }\r\n        year++;\r\n        startDate.setFullYear(year, 1, 1);\r\n      }\r\n      stat = this.statistics.get(year);\r\n      if (typeof series[i][1] !== 'undefined') {\r\n        if ((series[i][1] - oldDatapoint[1]) > 0) {\r\n          if (type === 'requests') {\r\n            stat.numberRequests++;\r\n          } else if (type === 'loans') {\r\n            stat.numberLoans++;\r\n          } else if (type === 'cald') {\r\n            stat.numberCald++;\r\n          }\r\n        }\r\n      }\r\n      amount = (finalEndDate.valueOf() - startDate.valueOf()) * oldDatapoint[1] / (1000 * 3600 * 24);\r\n      if (type === 'stock') {\r\n        stat.daysStock += amount;\r\n      } else if (type === 'loans') {\r\n        stat.daysLoaned += amount;\r\n      } else if (type === 'requests') {\r\n        stat.daysRequested += amount;\r\n      }\r\n      oldDatapoint = series[i];\r\n    }\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {TranslateModule} from '../translate/translate.module';\r\nimport {StatisticsComponent} from './statistics.component';\r\nimport {statisticsRouting} from './statistics.routing';\r\nimport {TableModule} from 'primeng/table';\r\nimport {ButtonModule} from 'primeng/primeng';\r\n\r\n@NgModule({\r\n  imports: [CommonModule,\r\n    TableModule,\r\n    TranslateModule,\r\n    ButtonModule,\r\n    statisticsRouting],\r\n  declarations: [StatisticsComponent],\r\n  exports: [StatisticsComponent],\r\n  providers: []\r\n})\r\nexport class StatisticsModule {\r\n\r\n}\r\n","import {RouterModule, Routes} from '@angular/router';\r\nimport {ModuleWithProviders} from '@angular/core';\r\nimport {StatisticsComponent} from './statistics.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: StatisticsComponent}\r\n];\r\nexport const statisticsRouting: ModuleWithProviders = RouterModule.forChild(routes);\r\n"],"sourceRoot":""}